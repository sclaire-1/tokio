var N=null,E="",T="t",U="u",searchIndex={};
var R=["Creates a future which will open a file for reading and…","Queries the file system metadata for a path.","metadata","set_permissions","permissions","openoptions","create","tokio::fs","An error returned when an operation could not be completed…","repeat","Split a single value implementing `AsyncRead + AsyncWrite`…","tokio::io","get_pin_mut","into_inner","with_capacity","get_ref","get_mut","Returns a reference to the internally buffered data.","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Read bytes asynchronously.","context","result","Creates a future which will read all the bytes associated…","An extension trait which adds utility methods to…","read_to_string","Read all bytes until EOF in this source, placing them into…","shutdown","duration","option","tokio::net","poll_read_ready","poll_write_ready","TcpListener","An I/O object representing a TCP socket listening for…","TcpStream","An I/O object representing a TCP stream connected to a…","from_std","tcplistener","socketaddr","incoming","tokio::net::tcp","ReadHalf","WriteHalf","tosocketaddrs","tcpstream","local_addr","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","UdpSocket","An I/O object representing a UDP socket.","udpsocket","Returns a future that sends data on the socket to the…","set_ttl","ipv4addr","ipv6addr","tokio::net::udp","reuniteerror","recv_from","Returns a future that receives a single datagram on the…","Returns a future that receives a single datagram message…","Attempts to put the two \"halves\" of a `UdpSocket` back…","UnixDatagram","An I/O object representing a Unix datagram socket.","Incoming","UnixListener","A Unix socket which can accept connections from other Unix…","UnixStream","A structure representing a connected Unix socket.","unixdatagram","connect","send_to","Receives data from the socket.","Returns the local address that this socket is bound to.","peer_addr","unixlistener","take_error","Returns the value of the `SO_ERROR` option.","Consumes this listener, returning a stream of the sockets…","tokio::net::unix","unixstream","Creates an unnamed pair of connected sockets.","Shuts down the read, write, or both halves of this…","AsyncBufRead","poll_fill_buf","Attempt to return the contents of the internal buffer,…","Tells this buffer that `amt` bytes have been consumed from…","AsyncRead","prepare_uninitialized_buffer","Prepares an uninitialized buffer to be safe to pass to…","poll_read","tokio::prelude","Attempt to read from the `AsyncRead` into `buf`.","poll_read_buf","Pull some bytes from this source into the specified…","AsyncWrite","Writes bytes asynchronously.","poll_write","Attempt to write bytes from `buf` into the object.","poll_flush","Attempt to flush the object, ensuring that any buffered…","poll_shutdown","Initiates or attempts to shut down this writer, returning…","poll_write_buf","Write a `Buf` into this value, returning how many bytes…","command","joinhandle","Spawn a future onto the Tokio runtime.","Enter the runtime context","trysenderror","Receive the next value for this receiver.","Closes the receiving half of a channel, without dropping it.","senderror","tokio::sync","RecvError","tokio::sync::oneshot","tryrecverror","semaphore","tryacquireerror","is_closed","Receiver","SendError","tokio::sync::watch","broadcast","Spawns a new asynchronous task, returning a `JoinHandle`]…","joinerror","Creates new `Interval` that yields with interval of…","interval","Require a `Future` to complete before the specified…","A queue of delayed elements.","DelayQueue","delayqueue","Sets the delay of the item associated with `key` to expire…","tokio::time","instant","Returns `true` if the error was caused by the timer being…","Returns the amount of time elapsed from another instant to…","borrow_mut","try_from","try_into","clone_into","type_id","try_poll_next","tokio::io::split","tokio::net::driver","to_owned","tokio::net::util","tokio::net::tcp::split","tokio::net::udp::split","to_string","tokio::net::unix::split","tokio::process","tokio::runtime","tokio::signal::unix","tokio::sync::mpsc","tokio::sync::mpsc::error","try_poll","tokio::sync::oneshot::error","tokio::sync::semaphore","tokio::sync::watch::error","tokio::task","tokio::time::delay_queue","errorkind","formatter","ordering","partial_cmp","consume","park_timeout","default","signalkind","bufwriter","bufreader","add_assign","sub_assign","Consumes stream, returning the tokio I/O object.","as_raw_fd","poll_next","read_until","readuntil","read_line","Returns a stream of the contents of this reader split on…","Returns a stream over the lines of this reader. This…","Creates an adaptor which will chain this stream with…","Copy all data from `self` into the provided `AsyncWrite`.","Read data into the provided buffer.","read_exact","Read exactly the amount of data needed to fill the…","readexact","read_to_end","readtoend","readtostring","Creates an AsyncRead adapter which will read at most…","Write a buffer into this writter, returning how many bytes…","write_all","Attempt to write an entire buffer into this writter.","Flush the contents of this writer.","Shutdown this writer.","Creates a new `Duration` from the specified number of…","Returns the fractional part of this `Duration`, in whole…","checked_add","checked_sub","Returns the number of seconds contained by this `Duration`…","OpenOptions","ErrorKind","BufReader","BufStream","BufWriter","AsyncBufReadExt","AsyncReadExt","AsyncWriteExt","Registration","PollEvented","ReuniteError","UdpSocketRecvHalf","UdpSocketSendHalf","SignalKind","BarrierWaitResult","UnboundedReceiver","UnboundedSender","TrySendError","Semaphore","TryAcquireError","JoinError","DefaultGuard","ChildStdin","ChildStdout","ChildStderr","MutexGuard","ClosedError","TryRecvError","AcquireError","JoinHandle","Marks async function to be executed by selected runtime.","Marks async function to be executed by runtime, suitable…","tlsconnector","tlsacceptor","TlsStream","TlsConnector","TlsAcceptor","Provides a `Stream` and `Sink` interface for reading and…","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","read_buffer","Returns a reference to the read buffer.","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","Creates a new length delimited codec builder with default…","max_frame_length","lengthdelimitedcodec","framedread","framedwrite","tokio_util::codec","bytesmut","asyncwrite","asyncread","tokio_util","A unified `Stream` and `Sink` interface to an underlying…","tokio_util::codec::length_delimited","tokio_util::udp","linescodecerror","decode_eof","bytescodec","linescodec","poll_ready","start_send","poll_close","A default method available to be called when there are no…","FramedParts","LinesCodecError","BytesCodec","FramedRead","FramedWrite","LengthDelimitedCodec","LinesCodec","UdpFramed","LengthDelimitedCodecError","Sequence a `read` operation.","Sequence a `write` operation.","tokio_test","tokio_test::io","tokio_test::task","deref_mut","builder","Builder"];
searchIndex["test_cat"]={"doc":"A cat-like utility that can be used as a subprocess to…","i":[],"p":[]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio",R[233],N,N],[23,"test",E,R[234],N,N],[5,"spawn",E,R[125],N,[[[T]],[R[107]]]],[0,"fs",E,"Asynchronous file and standard stream adaptation.",N,N],[3,"File",R[7],"A reference to an open file on the filesystem.",N,N],[3,R[203],E,"Options and flags which can be used to configure how a…",N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[5,"create_dir",E,"Creates a new, empty directory at the provided path",N,[[]]],[5,"create_dir_all",E,"Recursively create a directory and all of its parent…",N,[[]]],[5,"hard_link",E,"Creates a new hard link on the filesystem.",N,[[]]],[5,R[2],E,R[1],N,[[]]],[5,"read",E,R[0],N,[[]]],[5,"read_dir",E,"Returns a stream over the entries within a directory.",N,[[]]],[5,"read_link",E,"Reads a symbolic link, returning the file that the link…",N,[[]]],[5,R[26],E,R[0],N,[[]]],[5,"remove_dir",E,"Removes an existing, empty directory.",N,[[]]],[5,"remove_dir_all",E,"Removes a directory at this path, after removing all its…",N,[[]]],[5,"remove_file",E,"Removes a file from the filesystem.",N,[[]]],[5,"rename",E,"Rename a file or directory to a new name, replacing the…",N,[[]]],[5,R[3],E,"Changes the permissions found on a file or a directory.",N,[[[R[4]]]]],[5,"symlink_metadata",E,R[1],N,[[]]],[5,"write",E,"Creates a future that will open a file for writing and…",N,[[["unpin"],["asref"]]]],[11,"open",E,"Attempts to open a file in read-only mode.",0,[[]]],[11,R[6],E,"Opens a file in write-only mode.",0,[[]]],[11,R[38],E,"Convert a [`std::fs::File`][std] to a…",0,[[["file"]],["file"]]],[11,"seek",E,"Seek to an offset, in bytes, in a stream.",0,[[["seekfrom"],["self"]]]],[11,"sync_all",E,"Attempts to sync all OS-internal metadata to disk.",0,[[["self"]]]],[11,"sync_data",E,"This function is similar to `sync_all`, except that it may…",0,[[["self"]]]],[11,"set_len",E,"Truncates or extends the underlying file, updating the…",0,[[["u64"],["self"]]]],[11,R[2],E,"Queries metadata about the underlying file.",0,[[["self"]]]],[11,"try_clone",E,"Create a new `File` instance that shares the same…",0,[[["self"]]]],[11,R[3],E,"Changes the permissions on the underlying file.",0,[[["self"],[R[4]]]]],[11,"new",E,"Creates a blank new set of options ready for configuration.",1,[[],[R[5]]]],[11,"read",E,"See the underlying [`read`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"write",E,"See the underlying [`write`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"append",E,"See the underlying [`append`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"truncate",E,"See the underlying [`truncate`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,R[6],E,"See the underlying [`create`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"create_new",E,"See the underlying [`create_new`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"open",E,"Opens a file at `path` with the options specified by `self`.",1,[[["self"]]]],[0,"os",E,"OS-specific functionality.",N,N],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",N,[[]]],[11,"next_entry",R[7],"Returns the next entry in the directory stream.",2,[[["self"]]]],[11,"path",E,"Returns the full path to the file that this entry…",3,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",3,[[["self"]],["osstring"]]],[11,R[2],E,"Return the metadata for the file that this entry points at.",3,[[["self"]]]],[11,"file_type",E,"Return the file type for the file that this entry points at.",3,[[["self"]]]],[0,"io","tokio","Asynchronous I/O.",N,N],[3,"Error",R[11],"The error type for I/O operations of the [`Read`],…",N,N],[4,R[204],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",4,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",4,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",4,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",4,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",4,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",4,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",4,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",4,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",4,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",4,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",4,N],[13,"InvalidInput",E,"A parameter was incorrect.",4,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",4,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",4,N],[13,"WriteZero",E,R[8],4,N],[13,"Interrupted",E,"This operation was interrupted.",4,N],[13,"Other",E,"Any I/O error not part of this list.",4,N],[13,"UnexpectedEof",E,R[8],4,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[3,R[205],E,"The `BufReader` struct adds buffering to any reader.",N,N],[3,R[206],E,"Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",N,N],[3,R[207],E,"Wraps a writer and buffers its output.",N,N],[3,"Copy",E,"A future that asynchronously copies the entire contents of…",N,N],[3,"Empty",E,"This struct is generally created by calling [`empty`].…",N,N],[3,"Lines",E,"Stream for the `lines` method.",N,N],[3,"Repeat",E,"An async reader which yields one byte over and over and…",N,N],[3,"Sink",E,"An async writer which will move data into the void.",N,N],[3,"Split",E,"Stream for the `split` method.",N,N],[3,"Take",E,"Stream for the `take` method.",N,N],[3,"Stderr",E,"A handle to the standard error stream of a process.",N,N],[3,"Stdin",E,"A handle to the standard input stream of a process.",N,N],[3,"Stdout",E,"A handle to the standard output stream of a process.",N,N],[5,"copy",E,"Asynchronously copies the entire contents of a reader into…",N,[[["r"],["w"]],[["copy"],["sized"]]]],[5,"empty",E,"Creates a new empty async reader.",N,[[],["empty"]]],[5,R[9],E,"Creates an instance of an async reader that infinitely…",N,[[["u8"]],[R[9]]]],[5,"sink",E,"Creates an instance of an async writer which will…",N,[[],["sink"]]],[5,"stderr",E,"Constructs a new handle to the standard error of the…",N,[[],["stderr"]]],[5,"stdin",E,"Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[5,"stdout",E,"Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[0,"split",E,R[10],N,N],[3,R[43],R[144],"The readable half of a value returned from `split`.",N,N],[3,R[44],E,"The writable half of a value returned from `split`.",N,N],[5,"split",E,R[10],N,[[[T]]]],[11,"unsplit",E,"Reunite with a previously split `WriteHalf`.",5,[[["writehalf"]],[T]]],[11,"new",R[11],"Creates a new `BufReader` with a default buffer capacity.…",6,[[["r"]],["self"]]],[11,R[14],E,"Creates a new `BufReader` with the specified buffer…",6,[[["usize"],["r"]],["self"]]],[11,R[15],E,R[18],6,[[["self"]],["r"]]],[11,R[16],E,R[19],6,[[["self"]],["r"]]],[11,R[12],E,R[20],6,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[13],E,"Consumes this `BufWriter`, returning the underlying reader.",6,[[],["r"]]],[11,"buffer",E,R[17],6,[[["self"]]]],[11,"new",E,"Wrap a type in both [`BufWriter`] and [`BufReader`].",7,[[["rw"]],["bufstream"]]],[11,R[15],E,"Gets a reference to the underlying I/O object.",7,[[["self"]],["rw"]]],[11,R[16],E,"Gets a mutable reference to the underlying I/O object.",7,[[["self"]],["rw"]]],[11,R[12],E,"Gets a pinned mutable reference to the underlying I/O…",7,[[["pin"],["self"]],[["rw"],["pin"]]]],[11,R[13],E,"Consumes this `BufStream`, returning the underlying I/O…",7,[[],["rw"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.…",8,[[["w"]],["self"]]],[11,R[14],E,"Creates a new `BufWriter` with the specified buffer…",8,[[["w"],["usize"]],["self"]]],[11,R[15],E,"Gets a reference to the underlying writer.",8,[[["self"]],["w"]]],[11,R[16],E,"Gets a mutable reference to the underlying writer.",8,[[["self"]],["w"]]],[11,R[12],E,"Gets a pinned mutable reference to the underlying writer.",8,[[["pin"],["self"]],[["pin"],["w"]]]],[11,R[13],E,"Consumes this `BufWriter`, returning the underlying writer.",8,[[],["w"]]],[11,"buffer",E,R[17],8,[[["self"]]]],[11,"next_line",E,"Returns the next line in the stream.",9,[[["self"]]]],[11,"next_segment",E,"Returns the next segment in the stream.",10,[[["self"]]]],[11,"limit",E,"Returns the remaining number of bytes that can be read…",11,[[["self"]],["u64"]]],[11,"set_limit",E,"Sets the number of bytes that can be read before this…",11,[[["self"],["u64"]]]],[11,R[15],E,R[18],11,[[["self"]],["r"]]],[11,R[16],E,R[19],11,[[["self"]],["r"]]],[11,R[12],E,R[20],11,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[13],E,"Consumes the `Take`, returning the wrapped reader.",11,[[],["r"]]],[8,R[84],E,R[21],N,N],[10,R[85],E,R[86],12,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[10,R[167],E,R[87],12,[[["pin"],["self"],["usize"]]]],[8,R[88],E,R[21],N,N],[11,R[89],E,R[90],13,[[["self"]],["bool"]]],[10,R[91],E,R[93],13,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],E,R[95],13,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[8,R[96],E,R[97],N,N],[10,R[98],E,R[99],14,[[["self"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[10,R[100],E,R[101],14,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[10,R[102],E,R[103],14,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[104],E,R[105],14,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[8,R[208],E,R[25],N,N],[11,R[178],E,R[24],15,[[["vec"],["self"],["u8"]],[R[179]]]],[11,R[180],E,R[24],15,[[["self"],["string"]],["readline"]]],[11,"split",E,R[181],15,[[["u8"]],["split"]]],[11,"lines",E,R[182],15,[[],["lines"]]],[8,R[209],E,R[25],N,N],[11,"chain",E,R[183],16,[[["r"]],["chain"]]],[11,"copy",E,R[184],16,[[["self"],["w"]],[["sized"],["copy"]]]],[11,"read",E,R[185],16,[[["self"]],["read"]]],[11,R[186],E,R[187],16,[[["self"]],[R[188]]]],[11,R[189],E,R[27],16,[[["vec"],["self"]],[R[190]]]],[11,R[26],E,R[27],16,[[["self"],["string"]],[R[191]]]],[11,"take",E,R[192],16,[[["u64"]],["take"]]],[8,R[210],E,R[25],N,N],[11,"write",E,R[193],17,[[["self"]],["write"]]],[11,R[194],E,R[195],17,[[["self"]],["writeall"]]],[11,"flush",E,R[196],17,[[["self"]],["flush"]]],[11,R[28],E,R[197],17,[[["self"]],[R[28]]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[34],R[31],R[35],N,N],[3,R[36],E,R[37],N,N],[3,R[50],E,R[51],N,N],[3,R[63],E,R[64],N,N],[3,R[66],E,R[67],N,N],[3,R[68],E,R[69],N,N],[0,"driver",E,"Event loop that drives Tokio I/O resources.",N,N],[3,R[224],R[145],"Guard that resets current reactor on drop.",N,N],[3,"Handle",E,"A reference to a reactor.",N,N],[3,"Reactor",E,"The core reactor, or event loop.",N,N],[3,R[211],E,"Associates an I/O resource with the reactor instance that…",N,N],[5,"set_default",E,"Sets handle for a default reactor, returning guard that…",N,[[["handle"]],["defaultguard"]]],[11,"new",E,"Creates a new event loop, returning any error that…",18,[[],[[R[23],["reactor"]],["reactor"]]]],[11,"handle",E,"Returns a handle to this event loop which can be sent…",18,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the event loop, blocking on…",18,[[["self"],[R[30],[R[29]]],[R[29]]],[["turn"],[R[23],["turn"]]]]],[11,"is_idle",E,"Returns true if the reactor is currently idle.",18,[[["self"]],["bool"]]],[11,"new",E,"Register the I/O resource with the default reactor.",19,[[[T]],[R[23]]]],[11,"deregister",E,"Deregister the I/O resource from the reactor it is…",19,[[["self"],[T]],[R[23]]]],[11,R[32],E,"Poll for events on the I/O resource's read readiness stream.",19,[[["self"],[R[22]]],[["poll",[R[23]]],[R[23],["ready"]]]]],[11,"take_read_ready",E,"Consume any pending read readiness event.",19,[[["self"]],[[R[23],[R[30]]],[R[30],["ready"]]]]],[11,R[33],E,"Poll for events on the I/O resource's write readiness…",19,[[["self"],[R[22]]],[["poll",[R[23]]],[R[23],["ready"]]]]],[11,"take_write_ready",E,"Consume any pending write readiness event.",19,[[["self"]],[[R[23],[R[30]]],[R[30],["ready"]]]]],[0,"util",R[31],"Utilities for implementing networking types.",N,N],[3,R[212],R[147],"Associates an I/O resource that implements the…",N,N],[11,"new",E,"Creates a new `PollEvented` associated with the default…",20,[[["e"]],[R[23]]]],[11,R[15],E,"Returns a shared reference to the underlying I/O object…",20,[[["self"]],["e"]]],[11,R[16],E,"Returns a mutable reference to the underlying I/O object…",20,[[["self"]],["e"]]],[11,R[13],E,"Consumes self, returning the inner I/O object",20,[[],[R[23]]]],[11,R[32],E,"Check the I/O resource's read readiness state.",20,[[["self"],["ready"],[R[22]]],[["poll",[R[23]]],[R[23],["ready"]]]]],[11,"clear_read_ready",E,"Clears the I/O resource's read readiness state and…",20,[[["self"],["ready"],[R[22]]],[R[23]]]],[11,R[33],E,"Check the I/O resource's write readiness state.",20,[[["self"],[R[22]]],[["poll",[R[23]]],[R[23],["ready"]]]]],[11,"clear_write_ready",E,"Resets the I/O resource's write readiness state and…",20,[[["self"],[R[22]]],[R[23]]]],[0,"tcp",R[31],"TCP bindings for `tokio`.",N,N],[3,R[34],R[42],R[35],N,N],[3,R[65],E,"Stream returned by the `TcpListener::incoming` function…",N,N],[3,R[36],E,R[37],N,N],[11,"bind",R[31],"Creates a new TcpListener which will be bound to the…",21,[[[R[45]]]]],[11,"accept",E,"Accept a new incoming connection from this listener.",21,[[["self"]]]],[11,R[38],E,"Create a new TCP listener from the standard library's TCP…",21,[[[R[39]]],[[R[39]],[R[23],[R[39]]]]]],[11,R[47],E,"Returns the local address that this listener is bound to.",21,[[["self"]],[[R[23],[R[40]]],[R[40]]]]],[11,R[41],E,R[79],21,[[["self"]],[R[41]]]],[11,"ttl",E,R[48],21,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,R[54],E,R[49],21,[[["self"],["u32"]],[R[23]]]],[0,"split",R[42],"`TcpStream` split support.",N,N],[3,R[43],R[148],"Read half of a `TcpStream`.",N,N],[3,R[44],E,"Write half of a `TcpStream`.",N,N],[11,R[71],R[31],"Opens a TCP connection to a remote host.",22,[[[R[45]]]]],[11,R[38],E,"Create a new `TcpStream` from a `std::net::TcpStream`.",22,[[[R[46]]],[[R[46]],[R[23],[R[46]]]]]],[11,R[47],E,"Returns the local address that this stream is bound to.",22,[[["self"]],[[R[23],[R[40]]],[R[40]]]]],[11,R[75],E,"Returns the remote address that this stream is connected…",22,[[["self"]],[[R[23],[R[40]]],[R[40]]]]],[11,"peek",E,"Receives data on the socket from the remote address to…",22,[[["self"]]]],[11,R[28],E,R[83],22,[[["self"],[R[28]]],[R[23]]]],[11,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",22,[[["self"]],[["bool"],[R[23],["bool"]]]]],[11,"set_nodelay",E,"Sets the value of the `TCP_NODELAY` option on this socket.",22,[[["self"],["bool"]],[R[23]]]],[11,"recv_buffer_size",E,"Gets the value of the `SO_RCVBUF` option on this socket.",22,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"set_recv_buffer_size",E,"Sets the value of the `SO_RCVBUF` option on this socket.",22,[[["self"],["usize"]],[R[23]]]],[11,"send_buffer_size",E,"Gets the value of the `SO_SNDBUF` option on this socket.",22,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"set_send_buffer_size",E,"Sets the value of the `SO_SNDBUF` option on this socket.",22,[[["self"],["usize"]],[R[23]]]],[11,"keepalive",E,"Returns whether keepalive messages are enabled on this…",22,[[["self"]],[[R[30],[R[29]]],[R[23],[R[30]]]]]],[11,"set_keepalive",E,"Sets whether keepalive messages are enabled to be sent on…",22,[[["self"],[R[30],[R[29]]],[R[29]]],[R[23]]]],[11,"ttl",E,R[48],22,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,R[54],E,R[49],22,[[["self"],["u32"]],[R[23]]]],[11,"linger",E,"Reads the linger duration for this socket by getting the…",22,[[["self"]],[[R[30],[R[29]]],[R[23],[R[30]]]]]],[11,"set_linger",E,"Sets the linger duration of this socket by setting the…",22,[[["self"],[R[30],[R[29]]],[R[29]]],[R[23]]]],[11,"split",E,"Split a `TcpStream` into a read half and a write half,…",22,[[["self"]]]],[0,"udp",E,"UDP bindings for `tokio`.",N,N],[3,R[50],R[57],R[51],N,N],[11,"bind",R[31],"This function will create a new UDP socket and attempt to…",23,[[[R[45]]]]],[11,R[38],E,"Creates a new `UdpSocket` from the previously bound socket…",23,[[[R[52]]],[[R[23],[R[52]]],[R[52]]]]],[11,"split",E,"Split the `UdpSocket` into a receive half and a send half.…",23,[[]]],[11,R[47],E,R[74],23,[[["self"]],[[R[23],[R[40]]],[R[40]]]]],[11,R[71],E,"Connects the UDP socket setting the default destination…",23,[[["self"],[R[45]]]]],[11,"send",E,R[53],23,[[["self"]]]],[11,"recv",E,R[61],23,[[["self"]]]],[11,R[72],E,R[53],23,[[[R[45]],["self"]]]],[11,R[59],E,R[60],23,[[["self"]]]],[11,R[124],E,"Gets the value of the `SO_BROADCAST` option for this socket.",23,[[["self"]],[["bool"],[R[23],["bool"]]]]],[11,"set_broadcast",E,"Sets the value of the `SO_BROADCAST` option for this socket.",23,[[["self"],["bool"]],[R[23]]]],[11,"multicast_loop_v4",E,"Gets the value of the `IP_MULTICAST_LOOP` option for this…",23,[[["self"]],[["bool"],[R[23],["bool"]]]]],[11,"set_multicast_loop_v4",E,"Sets the value of the `IP_MULTICAST_LOOP` option for this…",23,[[["self"],["bool"]],[R[23]]]],[11,"multicast_ttl_v4",E,"Gets the value of the `IP_MULTICAST_TTL` option for this…",23,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4",E,"Sets the value of the `IP_MULTICAST_TTL` option for this…",23,[[["self"],["u32"]],[R[23]]]],[11,"multicast_loop_v6",E,"Gets the value of the `IPV6_MULTICAST_LOOP` option for…",23,[[["self"]],[["bool"],[R[23],["bool"]]]]],[11,"set_multicast_loop_v6",E,"Sets the value of the `IPV6_MULTICAST_LOOP` option for…",23,[[["self"],["bool"]],[R[23]]]],[11,"ttl",E,R[48],23,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,R[54],E,R[49],23,[[["self"],["u32"]],[R[23]]]],[11,"join_multicast_v4",E,"Executes an operation of the `IP_ADD_MEMBERSHIP` type.",23,[[["self"],[R[55]]],[R[23]]]],[11,"join_multicast_v6",E,"Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",23,[[["self"],["u32"],[R[56]]],[R[23]]]],[11,"leave_multicast_v4",E,"Executes an operation of the `IP_DROP_MEMBERSHIP` type.",23,[[["self"],[R[55]]],[R[23]]]],[11,"leave_multicast_v6",E,"Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",23,[[["self"],["u32"],[R[56]]],[R[23]]]],[0,"split",R[57],"`UdpSocket` split support.",N,N],[3,R[215],R[149],"The send half after `split`.",N,N],[3,R[214],E,"The recv half after `split`.",N,N],[3,R[213],E,"Error indicating two halves were not from the same socket,…",N,N],[12,"0",E,E,24,N],[12,"1",E,E,24,N],[11,"reunite",E,R[62],25,[[["udpsocketsendhalf"]],[[R[23],[R[52],R[58]]],[R[52]],[R[58]]]]],[11,R[59],E,R[60],25,[[["self"]]]],[11,"recv",E,R[61],25,[[["self"]]]],[11,"reunite",E,R[62],26,[[["udpsocketrecvhalf"]],[[R[23],[R[52],R[58]]],[R[52]],[R[58]]]]],[11,R[72],E,R[53],26,[[[R[40]],["self"]]]],[11,"send",E,R[53],26,[[["self"]]]],[0,"unix",R[31],"Unix Domain Sockets for Tokio.",N,N],[3,R[63],R[80],R[64],N,N],[3,R[65],E,"Stream of listeners",N,N],[3,R[66],E,R[67],N,N],[3,R[68],E,R[69],N,N],[3,"UCred",E,"Credentials of a process",N,N],[12,"uid",E,"UID (user ID) of the process",27,N],[12,"gid",E,"GID (group ID) of the process",27,N],[11,"bind",R[31],"Creates a new `UnixDatagram` bound to the specified path.",28,[[["p"]],[[R[70]],[R[23],[R[70]]]]]],[11,"pair",E,R[82],28,[[],[R[23]]]],[11,R[38],E,"Consumes a `UnixDatagram` in the standard library and…",28,[[[R[70]]],[[R[70]],[R[23],[R[70]]]]]],[11,"unbound",E,"Creates a new `UnixDatagram` which is not bound to any…",28,[[],[[R[70]],[R[23],[R[70]]]]]],[11,R[71],E,"Connects the socket to the specified address.",28,[[["self"],["asref",["path"]],["path"]],[R[23]]]],[11,"send",E,"Sends data on the socket to the socket's peer.",28,[[["self"]]]],[11,"recv",E,R[73],28,[[["self"]]]],[11,R[72],E,"Sends data on the socket to the specified address.",28,[[["p"],["self"]]]],[11,R[59],E,R[73],28,[[["self"]]]],[11,R[47],E,R[74],28,[[["self"]],[[R[40]],[R[23],[R[40]]]]]],[11,R[75],E,"Returns the address of this socket's peer.",28,[[["self"]],[[R[40]],[R[23],[R[40]]]]]],[11,R[77],E,R[78],28,[[["self"]],[[R[30],["error"]],[R[23],[R[30]]]]]],[11,R[28],E,"Shut down the read, write, or both halves of this…",28,[[["self"],[R[28]]],[R[23]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified path.",29,[[["p"]],[[R[76]],[R[23],[R[76]]]]]],[11,R[38],E,"Consumes a `UnixListener` in the standard library and…",29,[[[R[76]]],[[R[76]],[R[23],[R[76]]]]]],[11,R[47],E,"Returns the local socket address of this listener.",29,[[["self"]],[[R[40]],[R[23],[R[40]]]]]],[11,R[77],E,R[78],29,[[["self"]],[[R[30],["error"]],[R[23],[R[30]]]]]],[11,"accept",E,"Accepts a new incoming connection to this listener.",29,[[["self"]]]],[11,R[41],E,R[79],29,[[["self"]],[R[41]]]],[0,"split",R[80],"`UnixStream` split support.",N,N],[3,R[43],R[151],"Read half of a `UnixStream`.",N,N],[3,R[44],E,"Write half of a `UnixStream`.",N,N],[11,R[71],R[31],"Connects to the socket named by `path`.",30,[[["p"]]]],[11,R[38],E,"Consumes a `UnixStream` in the standard library and…",30,[[[R[81]]],[[R[23],[R[81]]],[R[81]]]]],[11,"pair",E,R[82],30,[[],[R[23]]]],[11,R[47],E,"Returns the socket address of the local half of this…",30,[[["self"]],[[R[40]],[R[23],[R[40]]]]]],[11,R[75],E,"Returns the socket address of the remote half of this…",30,[[["self"]],[[R[40]],[R[23],[R[40]]]]]],[11,"peer_cred",E,"Returns effective credentials of the process which called…",30,[[["self"]],[["ucred"],[R[23],["ucred"]]]]],[11,R[77],E,R[78],30,[[["self"]],[[R[30],["error"]],[R[23],[R[30]]]]]],[11,R[28],E,R[83],30,[[["self"],[R[28]]],[R[23]]]],[11,"split",E,"Split a `UnixStream` into a read half and a write half,…",30,[[["self"]]]],[8,"ToSocketAddrs",E,"Convert or resolve without blocking to one or more…",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,R[84],R[92],R[21],N,N],[10,R[85],E,R[86],12,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[10,R[167],E,R[87],12,[[["pin"],["self"],["usize"]]]],[8,R[88],E,R[21],N,N],[11,R[89],R[11],R[90],13,[[["self"]],["bool"]]],[10,R[91],R[92],R[93],13,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],R[11],R[95],13,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[8,R[96],R[92],R[97],N,N],[10,R[98],E,R[99],14,[[["self"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[10,R[100],E,R[101],14,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[10,R[102],E,R[103],14,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[104],R[11],R[105],14,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[0,"process","tokio","An implementation of asynchronous process management for…",N,N],[3,"Command",R[152],"This structure mimics the API of [`std::process::Command`]…",N,N],[3,"Child",E,"Representation of a child process spawned onto an event…",N,N],[3,R[225],E,"The standard input stream for spawned children.",N,N],[3,R[226],E,"The standard output stream for spawned children.",N,N],[3,R[227],E,"The standard error stream for spawned children.",N,N],[11,"new",E,"Constructs a new `Command` for launching the program at…",31,[[["asref",["osstr"]],["osstr"]],[R[106]]]],[11,"arg",E,"Adds an argument to pass to the program.",31,[[["self"],["asref",["osstr"]],["osstr"]],[R[106]]]],[11,"args",E,"Adds multiple arguments to pass to the program.",31,[[["self"],["i"]],[R[106]]]],[11,"env",E,"Inserts or updates an environment variable mapping.",31,[[["self"],["k"],["v"]],[R[106]]]],[11,"envs",E,"Adds or updates multiple environment variable mappings.",31,[[["self"],["i"]],[R[106]]]],[11,"env_remove",E,"Removes an environment variable mapping.",31,[[["self"],["asref",["osstr"]],["osstr"]],[R[106]]]],[11,"env_clear",E,"Clears the entire environment map for the child process.",31,[[["self"]],[R[106]]]],[11,"current_dir",E,"Sets the working directory for the child process.",31,[[["self"],["asref",["path"]],["path"]],[R[106]]]],[11,"stdin",E,"Configuration for the child process's standard input…",31,[[["self"],["into",["stdio"]],["stdio"]],[R[106]]]],[11,"stdout",E,"Configuration for the child process's standard output…",31,[[["self"],["into",["stdio"]],["stdio"]],[R[106]]]],[11,"stderr",E,"Configuration for the child process's standard error…",31,[[["self"],["into",["stdio"]],["stdio"]],[R[106]]]],[11,"uid",E,"Sets the child process's user ID. This translates to a…",31,[[["self"],["u32"]],[R[106]]]],[11,"gid",E,"Similar to `uid`, but sets the group ID of the child…",31,[[["self"],["u32"]],[R[106]]]],[11,"pre_exec",E,"Schedules a closure to be run just before the `exec`…",31,[[["self"],["f"]],[R[106]]]],[11,"spawn",E,"Executes the command as a child process, returning a…",31,[[["self"]],[["child"],[R[23],["child"]]]]],[11,"status",E,"Executes a command as a child process, waiting for it to…",31,[[["self"]]]],[11,"output",E,"Executes the command as a child process, waiting for it to…",31,[[["self"]]]],[11,"id",E,"Returns the OS-assigned process identifier associated with…",32,[[["self"]],["u32"]]],[11,"kill",E,"Forces the child to exit.",32,[[["self"]],[R[23]]]],[11,"stdin",E,"Returns a handle for writing to the child's stdin, if it…",32,[[["self"]],[R[30]]]],[11,"stdout",E,"Returns a handle for reading from the child's stdout, if…",32,[[["self"]],[R[30]]]],[11,"stderr",E,"Returns a handle for reading from the child's stderr, if…",32,[[["self"]],[R[30]]]],[11,"wait_with_output",E,"Returns a future that will resolve to an `Output`,…",32,[[]]],[11,"forget",E,"Drop this `Child` without killing the underlying process.",32,[[]]],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",N,N],[3,R[285],R[153],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Handle",E,"Handle to the runtime",N,N],[3,"Runtime",E,"The Tokio runtime, includes a reactor as well as an…",N,N],[11,"new",E,"Returns a new runtime builder initialized with default…",33,[[],[R[284]]]],[11,"num_threads",E,"Set the maximum number of worker threads for the…",33,[[["self"],["usize"]],["self"]]],[11,"basic_scheduler",E,"Use a simpler scheduler that runs all tasks on the…",33,[[["self"]],["self"]]],[11,"threaded_scheduler",E,"Use a multi-threaded scheduler for executing tasks.",33,[[["self"]],["self"]]],[11,"thread_name",E,"Set name of threads spawned by the `Runtime`'s thread pool.",33,[[["self"]],["self"]]],[11,"thread_stack_size",E,"Set the stack size (in bytes) for worker threads.",33,[[["self"],["usize"]],["self"]]],[11,"after_start",E,"Execute function `f` after each thread is started but…",33,[[["self"],["f"]],["self"]]],[11,"before_stop",E,"Execute function `f` before each thread stops.",33,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `Runtime`.",33,[[["self"]],[[R[23],["runtime"]],["runtime"]]]],[11,"spawn",E,R[108],34,[[["self"],["f"]],[R[107]]]],[11,"enter",E,R[109],34,[[["self"],["f"]],["r"]]],[8,"Park",E,"Block the current thread.",N,N],[16,"Unpark",E,"Unpark handle type for the `Park` implementation.",35,N],[16,"Error",E,"Error returned by `park`",35,N],[10,"unpark",E,"Get a new `Unpark` handle associated with this `Park`…",35,[[["self"]]]],[10,"park",E,"Block the current thread unless or until the token is…",35,[[["self"]],[R[23]]]],[10,R[168],E,"Park the current thread for at most `duration`.",35,[[["self"],[R[29]]],[R[23]]]],[8,"Unpark",E,"Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark",E,"Unblock a thread that is blocked by the associated `Park`…",36,[[["self"]]]],[11,"new",E,"Create a new runtime instance with default configuration…",37,[[],[R[23]]]],[11,"spawn",E,R[108],37,[[["self"],["f"]],[R[107]]]],[11,"block_on",E,"Run a future to completion on the Tokio runtime. This is…",37,[[["self"],["future"]]]],[11,"enter",E,R[109],37,[[["self"],["f"]],["r"]]],[11,"handle",E,"Return a handle to the runtime's spawner.",37,[[["self"]],["handle"]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",N,N],[5,"ctrl_c","tokio::signal","Completes when a \"ctrl-c\" notification is sent to the…",N,[[]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[3,R[216],R[154],"Represents the specific kind of signal to listen for.",N,N],[3,"Signal",E,"An implementation of `Stream` for receiving a particular…",N,N],[5,"signal",E,"Creates a new stream which will receive notifications when…",N,[[[R[170]]],[[R[23],["signal"]],["signal"]]]],[11,"from_raw",E,"Allows for listening to any valid OS signal.",38,[[["c_int"]],["self"]]],[11,"alarm",E,"Represents the SIGALRM signal.",38,[[],["self"]]],[11,"child",E,"Represents the SIGCHLD signal.",38,[[],["self"]]],[11,"hangup",E,"Represents the SIGHUP signal.",38,[[],["self"]]],[11,"interrupt",E,"Represents the SIGINT signal.",38,[[],["self"]]],[11,"io",E,"Represents the SIGIO signal.",38,[[],["self"]]],[11,"pipe",E,"Represents the SIGPIPE signal.",38,[[],["self"]]],[11,"quit",E,"Represents the SIGQUIT signal.",38,[[],["self"]]],[11,"terminate",E,"Represents the SIGTERM signal.",38,[[],["self"]]],[11,"user_defined1",E,"Represents the SIGUSR1 signal.",38,[[],["self"]]],[11,"user_defined2",E,"Represents the SIGUSR2 signal.",38,[[],["self"]]],[11,"window_change",E,"Represents the SIGWINCH signal.",38,[[],["self"]]],[0,"sync","tokio","Future-aware synchronization",N,N],[3,"Barrier",R[114],"A barrier enables multiple threads to synchronize the…",N,N],[3,R[217],E,"A `BarrierWaitResult` is returned by `wait` when all…",N,N],[3,"Mutex",E,"An asynchronous mutual exclusion primitive useful for…",N,N],[3,R[228],E,"A handle to a held `Mutex`.",N,N],[11,"new",E,"Creates a new barrier that can block a given number of…",39,[[["usize"]],["barrier"]]],[11,"wait",E,"Does not resolve until all tasks have rendezvoused here.",39,[[["self"]]]],[11,"is_leader",E,"Returns true if this thread from wait is the \"leader…",40,[[["self"]],["bool"]]],[0,"mpsc",E,"A multi-producer, single-consumer queue for sending values…",N,N],[3,R[121],R[155],"Receive values from the associated `Sender`.",N,N],[3,"Sender",E,"Send values to the associated `Receiver`.",N,N],[3,R[218],E,"Receive values from the associated `UnboundedSender`.",N,N],[3,R[219],E,"Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel",E,"Create a bounded mpsc channel for communicating between…",N,[[["usize"]]]],[5,"unbounded_channel",E,"Create an unbounded mpsc channel for communicating between…",N,[[]]],[11,"recv",E,R[111],41,[[["self"]]]],[11,"close",E,R[112],41,[[["self"]]]],[11,"try_send",E,"Attempts to send a message on this `Sender`, returning the…",42,[[["self"],[T]],[[R[23],[R[110]]],[R[110]]]]],[11,"send",E,"Send a value, waiting until there is capacity.",42,[[[T],["self"]]]],[11,"recv",E,R[111],43,[[["self"]]]],[11,"close",E,R[112],43,[[["self"]]]],[11,"send",E,"Attempts to send a message on this `UnboundedSender`…",44,[[["self"],[T]],[[R[23],[R[113]]],[R[113]]]]],[0,"error",E,"Channel error types",N,N],[3,R[122],R[156],"Error returned by the `Sender`.",N,N],[12,"0",E,E,45,N],[3,R[115],E,"Error returned by `Receiver`.",N,N],[3,R[229],E,"Erorr returned by `Sender::poll_ready`].",N,N],[4,R[220],E,"This enumeration is the list of the possible error…",N,N],[13,"Full",E,"The data could not be sent on the channel because the…",46,N],[13,"Closed",E,"The receive half of the channel was explicitly closed or…",46,N],[11,"new",R[114],"Creates a new lock in an unlocked state ready for use.",47,[[[T]],["self"]]],[11,"lock",E,"A future that resolves on acquiring the lock and returns…",47,[[["self"]]]],[0,"oneshot",E,"A channel for sending a single message between…",N,N],[3,"Sender",R[116],"Sends a value to the associated `Receiver`.",N,N],[3,R[121],E,"Receive a value from the associated `Sender`.",N,N],[5,"channel",E,"Create a new one-shot channel for sending single values…",N,[[]]],[0,"error",E,"Oneshot error types",N,N],[3,R[115],R[158],"Error returned by the `Future` implementation for…",N,N],[3,R[230],E,"Error returned by the `try_recv` function on `Receiver`.",N,N],[11,"send",R[116],"Completes this oneshot with a successful result.",48,[[[T]],[R[23]]]],[11,"closed",E,"Wait for the associated [`Receiver`] handle to drop.",48,[[["self"]]]],[11,R[120],E,"Check if the associated [`Receiver`] handle has been…",48,[[["self"]],["bool"]]],[11,"close",E,"Prevent the associated [`Sender`] handle from sending a…",49,[[["self"]]]],[11,"try_recv",E,"Attempts to receive a value outside of the context of a…",49,[[["self"]],[[R[23],[R[117]]],[R[117]]]]],[0,R[118],R[114],"Thread-safe, asynchronous counting semaphore.",N,N],[3,R[221],R[159],"Futures-aware semaphore.",N,N],[3,"Permit",E,"A semaphore permit",N,N],[3,R[231],E,"Error returned by `Permit::poll_acquire`.",N,N],[3,R[222],E,"Error returned by `Permit::try_acquire`.",N,N],[11,"new",E,"Creates a new semaphore with the initial number of permits",50,[[["usize"]],[R[118]]]],[11,"available_permits",E,"Returns the current number of available permits",50,[[["self"]],["usize"]]],[11,"close",E,"Close the semaphore. This prevents the semaphore from…",50,[[["self"]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",50,[[["self"],["usize"]]]],[11,"new",E,"Create a new `Permit`.",51,[[],["permit"]]],[11,"is_acquired",E,"Returns true if the permit has been acquired",51,[[["self"]],["bool"]]],[11,"poll_acquire",E,"Try to acquire the permit. If no permits are available,…",51,[[["self"],[R[118]],[R[22]]],[["poll",[R[23]]],[R[23],["acquireerror"]]]]],[11,"try_acquire",E,"Try to acquire the permit.",51,[[["self"],[R[118]]],[[R[119]],[R[23],[R[119]]]]]],[11,"release",E,"Release a permit back to the semaphore",51,[[["self"],[R[118]]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",51,[[["self"]]]],[11,R[120],E,"Returns true if the error was caused by a closed semaphore.",52,[[["self"]],["bool"]]],[11,"is_no_permits",E,"Returns true if the error was caused by calling…",52,[[["self"]],["bool"]]],[0,"watch",R[114],"A single-producer, multi-consumer channel that only…",N,N],[3,R[121],R[123],"Receives values from the associated `Sender`.",N,N],[3,"Sender",E,"Sends values to the associated `Receiver`.",N,N],[3,"Ref",E,"Returns a reference to the inner value",N,N],[5,"channel",E,"Create a new watch channel, returning the \"send\" and…",N,[[["clone"]]]],[0,"error",E,"Watch error types",N,N],[3,R[122],R[160],"Error produced when sending a value fails.",N,N],[11,"borrow",R[123],"Returns a reference to the most recently sent value",53,[[["self"]],["ref"]]],[11,"recv",E,"Attempts to clone the latest value sent via the channel.",53,[[["self"]]]],[11,R[124],E,"Broadcast a new value via the channel, notifying all…",54,[[["self"],[T]],[[R[23],[R[113]]],[R[113]]]]],[11,"closed",E,"Completes when all receivers have dropped.",54,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",N,N],[3,R[223],R[161],"Task failed to execute to completion.",N,N],[3,R[232],E,"An owned permission to join on a task (await its…",N,N],[5,"block_in_place",E,"Run the provided blocking function without blocking the…",N,[[["f"]],["r"]]],[5,"spawn_blocking",E,"Run the provided closure on a thread where blocking is…",N,[[["f"]],[R[107]]]],[5,"spawn",E,R[125],N,[[[T]],[R[107]]]],[5,"yield_now",E,"Yield execution back to the Tokio runtime.",N,[[]]],[11,"cancelled",E,"Create a new `cancelled` error",55,[[],[R[126]]]],[11,"panic",E,"Create a new `panic` error",55,[[["any"],["box",["any"]]],[R[126]]]],[0,"time","tokio","Utilities for tracking time.",N,N],[3,"Duration",R[134],"A `Duration` type to represent a span of time, typically…",N,N],[3,R[131],E,R[130],N,N],[3,"Delay",E,"Future returned by `delay_until` and `delay_for`.",N,N],[3,"Error",E,"Errors encountered by the timer implementation.",N,N],[3,"Instant",E,"A measurement of the system clock, useful for talking to…",N,N],[3,"Interval",E,"Stream returned by `instant` and `instant_at`.",N,N],[3,"Timeout",E,"Future returned by `timeout` and `timeout_at`.",N,N],[5,"advance",E,"Advance time",N,[[[R[29]]]]],[5,"pause",E,"Pause time",N,[[]]],[5,"resume",E,"Resume time",N,[[]]],[5,"delay_for",E,"Wait until `duration` has elapsed.",N,[[[R[29]]],["delay"]]],[5,"delay_until",E,"Wait until `deadline` is reached.",N,[[[R[135]]],["delay"]]],[5,R[128],E,R[127],N,[[[R[29]]],[R[128]]]],[5,"interval_at",E,R[127],N,[[[R[29]],[R[135]]],[R[128]]]],[5,"timeout",E,R[129],N,[[[T],[R[29]]],["timeout"]]],[5,"timeout_at",E,R[129],N,[[[T],[R[135]]],["timeout"]]],[0,"delay_queue",E,R[130],N,N],[3,R[131],R[162],R[130],N,N],[3,"Expired",E,"An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key",E,"Token to a value stored in a `DelayQueue`.",N,N],[11,"new",E,"Create a new, empty, `DelayQueue`",56,[[],[R[132]]]],[11,R[14],E,"Create a new, empty, `DelayQueue` with the specified…",56,[[["usize"]],[R[132]]]],[11,"insert_at",E,"Insert `value` into the queue set to expire at a specific…",56,[[["self"],[T],[R[135]]],["key"]]],[11,"poll_expired",E,"Attempt to pull out the next value of the delay queue,…",56,[[["self"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"insert",E,"Insert `value` into the queue set to expire after the…",56,[[["self"],[T],[R[29]]],["key"]]],[11,"remove",E,"Remove the item associated with `key` from the queue.",56,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[133],56,[[["self"],["key"],[R[135]]]]],[11,"reset",E,R[133],56,[[["self"],["key"],[R[29]]]]],[11,"clear",E,"Clears the queue, removing all items.",56,[[["self"]]]],[11,"capacity",E,"Returns the number of elements the queue can hold without…",56,[[["self"]],["usize"]]],[11,"reserve",E,"Reserve capacity for at least `additional` more items to…",56,[[["self"],["usize"]]]],[11,"is_empty",E,"Returns `true` if there are no items in the queue.",56,[[["self"]],["bool"]]],[11,R[15],E,"Returns a reference to the inner value.",57,[[["self"]],[T]]],[11,R[16],E,"Returns a mutable reference to the inner value.",57,[[["self"]],[T]]],[11,R[13],E,"Consumes `self` and returns the inner value.",57,[[],[T]]],[11,"deadline",R[134],"Returns the instant at which the future will complete.",58,[[["self"]],[R[135]]]],[11,"is_elapsed",E,"Returns true if the `Delay` has elapsed",58,[[["self"]],["bool"]]],[11,"reset",E,"Reset the `Delay` instance to a new deadline.",58,[[["self"],[R[135]]]]],[11,R[28],E,"Create an error representing a shutdown timer.",59,[[],["error"]]],[11,"is_shutdown",E,R[136],59,[[["self"]],["bool"]]],[11,"at_capacity",E,"Create an error representing a timer at capacity.",59,[[],["error"]]],[11,"is_at_capacity",E,R[136],59,[[["self"]],["bool"]]],[11,"now",E,"Returns an instant corresponding to \"now\".",60,[[],[R[135]]]],[11,R[38],E,"Create a `tokio::time::Instant` from a `std::time::Instant`.",60,[[[R[135]]],[R[135]]]],[11,"into_std",E,"Convert the value into a `std::time::Instant`.",60,[[],[R[135]]]],[11,"duration_since",E,R[137],60,[[["self"],[R[135]]],[R[29]]]],[11,"checked_duration_since",E,R[137],60,[[["self"],[R[135]]],[[R[30],[R[29]]],[R[29]]]]],[11,"saturating_duration_since",E,R[137],60,[[["self"],[R[135]]],[R[29]]]],[11,"elapsed",E,"Returns the amount of time elapsed since this instant was…",60,[[["self"]],[R[29]]]],[11,R[200],E,"Returns `Some(t)` where `t` is the time `self + duration`…",60,[[["self"],[R[29]]],[[R[30],[R[135]]],[R[135]]]]],[11,R[201],E,"Returns `Some(t)` where `t` is the time `self - duration`…",60,[[["self"],[R[29]]],[[R[30],[R[135]]],[R[135]]]]],[11,"tick",E,"Completes when the next instant in the interval has been…",61,[[["self"]]]],[11,R[15],E,"Gets a reference to the underlying value in this timeout.",62,[[["self"]],[T]]],[11,R[16],E,"Gets a mutable reference to the underlying value in this…",62,[[["self"]],[T]]],[11,R[13],E,"Consumes this timeout, returning the underlying value.",62,[[],[T]]],[11,"into",R[7],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[139],E,E,0,[[[U]],[R[23]]]],[11,R[140],E,E,0,[[],[R[23]]]],[11,R[138],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[142],E,E,0,[[["self"]],["typeid"]]],[11,R[146],E,E,1,[[["self"]],[T]]],[11,R[141],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[139],E,E,1,[[[U]],[R[23]]]],[11,R[140],E,E,1,[[],[R[23]]]],[11,R[138],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[142],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[139],E,E,3,[[[U]],[R[23]]]],[11,R[140],E,E,3,[[],[R[23]]]],[11,R[138],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[142],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[139],E,E,2,[[[U]],[R[23]]]],[11,R[140],E,E,2,[[],[R[23]]]],[11,R[138],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[142],E,E,2,[[["self"]],["typeid"]]],[11,R[143],E,E,2,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",R[11],E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[150],E,E,63,[[["self"]],["string"]]],[11,R[139],E,E,63,[[[U]],[R[23]]]],[11,R[140],E,E,63,[[],[R[23]]]],[11,R[138],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[142],E,E,63,[[["self"]],["typeid"]]],[11,R[146],E,E,4,[[["self"]],[T]]],[11,R[141],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[139],E,E,4,[[[U]],[R[23]]]],[11,R[140],E,E,4,[[],[R[23]]]],[11,R[138],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[142],E,E,4,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[139],E,E,6,[[[U]],[R[23]]]],[11,R[140],E,E,6,[[],[R[23]]]],[11,R[138],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[142],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[139],E,E,7,[[[U]],[R[23]]]],[11,R[140],E,E,7,[[],[R[23]]]],[11,R[138],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[142],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[139],E,E,8,[[[U]],[R[23]]]],[11,R[140],E,E,8,[[],[R[23]]]],[11,R[138],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[142],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[139],E,E,64,[[[U]],[R[23]]]],[11,R[140],E,E,64,[[],[R[23]]]],[11,R[138],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[142],E,E,64,[[["self"]],["typeid"]]],[11,R[157],E,E,64,[[["f"],[R[22]],["pin"]],["poll"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[139],E,E,65,[[[U]],[R[23]]]],[11,R[140],E,E,65,[[],[R[23]]]],[11,R[138],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[142],E,E,65,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[139],E,E,9,[[[U]],[R[23]]]],[11,R[140],E,E,9,[[],[R[23]]]],[11,R[138],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[142],E,E,9,[[["self"]],["typeid"]]],[11,R[143],E,E,9,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[139],E,E,66,[[[U]],[R[23]]]],[11,R[140],E,E,66,[[],[R[23]]]],[11,R[138],E,E,66,[[["self"]],[T]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[142],E,E,66,[[["self"]],["typeid"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[139],E,E,67,[[[U]],[R[23]]]],[11,R[140],E,E,67,[[],[R[23]]]],[11,R[138],E,E,67,[[["self"]],[T]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[142],E,E,67,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[139],E,E,10,[[[U]],[R[23]]]],[11,R[140],E,E,10,[[],[R[23]]]],[11,R[138],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[142],E,E,10,[[["self"]],["typeid"]]],[11,R[143],E,E,10,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[139],E,E,11,[[[U]],[R[23]]]],[11,R[140],E,E,11,[[],[R[23]]]],[11,R[138],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[142],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[139],E,E,68,[[[U]],[R[23]]]],[11,R[140],E,E,68,[[],[R[23]]]],[11,R[138],E,E,68,[[["self"]],[T]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[142],E,E,68,[[["self"]],["typeid"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[139],E,E,69,[[[U]],[R[23]]]],[11,R[140],E,E,69,[[],[R[23]]]],[11,R[138],E,E,69,[[["self"]],[T]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[142],E,E,69,[[["self"]],["typeid"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[139],E,E,70,[[[U]],[R[23]]]],[11,R[140],E,E,70,[[],[R[23]]]],[11,R[138],E,E,70,[[["self"]],[T]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[142],E,E,70,[[["self"]],["typeid"]]],[11,"into",R[144],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[139],E,E,5,[[[U]],[R[23]]]],[11,R[140],E,E,5,[[],[R[23]]]],[11,R[138],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[142],E,E,5,[[["self"]],["typeid"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[139],E,E,71,[[[U]],[R[23]]]],[11,R[140],E,E,71,[[],[R[23]]]],[11,R[138],E,E,71,[[["self"]],[T]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[142],E,E,71,[[["self"]],["typeid"]]],[11,"into",R[31],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[139],E,E,21,[[[U]],[R[23]]]],[11,R[140],E,E,21,[[],[R[23]]]],[11,R[138],E,E,21,[[["self"]],[T]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[142],E,E,21,[[["self"]],["typeid"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[139],E,E,22,[[[U]],[R[23]]]],[11,R[140],E,E,22,[[],[R[23]]]],[11,R[138],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[142],E,E,22,[[["self"]],["typeid"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[139],E,E,23,[[[U]],[R[23]]]],[11,R[140],E,E,23,[[],[R[23]]]],[11,R[138],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[142],E,E,23,[[["self"]],["typeid"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[139],E,E,28,[[[U]],[R[23]]]],[11,R[140],E,E,28,[[],[R[23]]]],[11,R[138],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[142],E,E,28,[[["self"]],["typeid"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[139],E,E,29,[[[U]],[R[23]]]],[11,R[140],E,E,29,[[],[R[23]]]],[11,R[138],E,E,29,[[["self"]],[T]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[142],E,E,29,[[["self"]],["typeid"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[139],E,E,30,[[[U]],[R[23]]]],[11,R[140],E,E,30,[[],[R[23]]]],[11,R[138],E,E,30,[[["self"]],[T]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[142],E,E,30,[[["self"]],["typeid"]]],[11,"into",R[145],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[139],E,E,72,[[[U]],[R[23]]]],[11,R[140],E,E,72,[[],[R[23]]]],[11,R[138],E,E,72,[[["self"]],[T]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[142],E,E,72,[[["self"]],["typeid"]]],[11,R[146],E,E,73,[[["self"]],[T]]],[11,R[141],E,E,73,[[["self"],[T]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[139],E,E,73,[[[U]],[R[23]]]],[11,R[140],E,E,73,[[],[R[23]]]],[11,R[138],E,E,73,[[["self"]],[T]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[142],E,E,73,[[["self"]],["typeid"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[139],E,E,18,[[[U]],[R[23]]]],[11,R[140],E,E,18,[[],[R[23]]]],[11,R[138],E,E,18,[[["self"]],[T]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[142],E,E,18,[[["self"]],["typeid"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[139],E,E,19,[[[U]],[R[23]]]],[11,R[140],E,E,19,[[],[R[23]]]],[11,R[138],E,E,19,[[["self"]],[T]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[142],E,E,19,[[["self"]],["typeid"]]],[11,"into",R[147],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[139],E,E,20,[[[U]],[R[23]]]],[11,R[140],E,E,20,[[],[R[23]]]],[11,R[138],E,E,20,[[["self"]],[T]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[142],E,E,20,[[["self"]],["typeid"]]],[11,"into",R[42],E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[139],E,E,74,[[[U]],[R[23]]]],[11,R[140],E,E,74,[[],[R[23]]]],[11,R[138],E,E,74,[[["self"]],[T]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[142],E,E,74,[[["self"]],["typeid"]]],[11,R[143],E,E,74,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",R[148],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[139],E,E,75,[[[U]],[R[23]]]],[11,R[140],E,E,75,[[],[R[23]]]],[11,R[138],E,E,75,[[["self"]],[T]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[142],E,E,75,[[["self"]],["typeid"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[139],E,E,76,[[[U]],[R[23]]]],[11,R[140],E,E,76,[[],[R[23]]]],[11,R[138],E,E,76,[[["self"]],[T]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[142],E,E,76,[[["self"]],["typeid"]]],[11,"into",R[149],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[139],E,E,26,[[[U]],[R[23]]]],[11,R[140],E,E,26,[[],[R[23]]]],[11,R[138],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[142],E,E,26,[[["self"]],["typeid"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[139],E,E,25,[[[U]],[R[23]]]],[11,R[140],E,E,25,[[],[R[23]]]],[11,R[138],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[142],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[150],E,E,24,[[["self"]],["string"]]],[11,R[139],E,E,24,[[[U]],[R[23]]]],[11,R[140],E,E,24,[[],[R[23]]]],[11,R[138],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[142],E,E,24,[[["self"]],["typeid"]]],[11,"into",R[80],E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[139],E,E,77,[[[U]],[R[23]]]],[11,R[140],E,E,77,[[],[R[23]]]],[11,R[138],E,E,77,[[["self"]],[T]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[142],E,E,77,[[["self"]],["typeid"]]],[11,R[143],E,E,77,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,R[146],E,E,27,[[["self"]],[T]]],[11,R[141],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[139],E,E,27,[[[U]],[R[23]]]],[11,R[140],E,E,27,[[],[R[23]]]],[11,R[138],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[142],E,E,27,[[["self"]],["typeid"]]],[11,"into",R[151],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[139],E,E,78,[[[U]],[R[23]]]],[11,R[140],E,E,78,[[],[R[23]]]],[11,R[138],E,E,78,[[["self"]],[T]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[142],E,E,78,[[["self"]],["typeid"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[139],E,E,79,[[[U]],[R[23]]]],[11,R[140],E,E,79,[[],[R[23]]]],[11,R[138],E,E,79,[[["self"]],[T]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[142],E,E,79,[[["self"]],["typeid"]]],[11,"into",R[152],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[139],E,E,31,[[[U]],[R[23]]]],[11,R[140],E,E,31,[[],[R[23]]]],[11,R[138],E,E,31,[[["self"]],[T]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[142],E,E,31,[[["self"]],["typeid"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[139],E,E,32,[[[U]],[R[23]]]],[11,R[140],E,E,32,[[],[R[23]]]],[11,R[138],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[142],E,E,32,[[["self"]],["typeid"]]],[11,R[157],E,E,32,[[["f"],[R[22]],["pin"]],["poll"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[139],E,E,80,[[[U]],[R[23]]]],[11,R[140],E,E,80,[[],[R[23]]]],[11,R[138],E,E,80,[[["self"]],[T]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[142],E,E,80,[[["self"]],["typeid"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[139],E,E,81,[[[U]],[R[23]]]],[11,R[140],E,E,81,[[],[R[23]]]],[11,R[138],E,E,81,[[["self"]],[T]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[142],E,E,81,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[139],E,E,82,[[[U]],[R[23]]]],[11,R[140],E,E,82,[[],[R[23]]]],[11,R[138],E,E,82,[[["self"]],[T]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[142],E,E,82,[[["self"]],["typeid"]]],[11,"into",R[153],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[139],E,E,33,[[[U]],[R[23]]]],[11,R[140],E,E,33,[[],[R[23]]]],[11,R[138],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[142],E,E,33,[[["self"]],["typeid"]]],[11,R[146],E,E,34,[[["self"]],[T]]],[11,R[141],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[139],E,E,34,[[[U]],[R[23]]]],[11,R[140],E,E,34,[[],[R[23]]]],[11,R[138],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[142],E,E,34,[[["self"]],["typeid"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[139],E,E,37,[[[U]],[R[23]]]],[11,R[140],E,E,37,[[],[R[23]]]],[11,R[138],E,E,37,[[["self"]],[T]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[142],E,E,37,[[["self"]],["typeid"]]],[11,R[146],R[154],E,38,[[["self"]],[T]]],[11,R[141],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[139],E,E,38,[[[U]],[R[23]]]],[11,R[140],E,E,38,[[],[R[23]]]],[11,R[138],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[142],E,E,38,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[139],E,E,83,[[[U]],[R[23]]]],[11,R[140],E,E,83,[[],[R[23]]]],[11,R[138],E,E,83,[[["self"]],[T]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[142],E,E,83,[[["self"]],["typeid"]]],[11,"into",R[114],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[139],E,E,39,[[[U]],[R[23]]]],[11,R[140],E,E,39,[[],[R[23]]]],[11,R[138],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[142],E,E,39,[[["self"]],["typeid"]]],[11,R[146],E,E,40,[[["self"]],[T]]],[11,R[141],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[139],E,E,40,[[[U]],[R[23]]]],[11,R[140],E,E,40,[[],[R[23]]]],[11,R[138],E,E,40,[[["self"]],[T]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[142],E,E,40,[[["self"]],["typeid"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[139],E,E,47,[[[U]],[R[23]]]],[11,R[140],E,E,47,[[],[R[23]]]],[11,R[138],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[142],E,E,47,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[150],E,E,84,[[["self"]],["string"]]],[11,R[139],E,E,84,[[[U]],[R[23]]]],[11,R[140],E,E,84,[[],[R[23]]]],[11,R[138],E,E,84,[[["self"]],[T]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[142],E,E,84,[[["self"]],["typeid"]]],[11,"into",R[155],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[139],E,E,41,[[[U]],[R[23]]]],[11,R[140],E,E,41,[[],[R[23]]]],[11,R[138],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[142],E,E,41,[[["self"]],["typeid"]]],[11,R[143],E,E,41,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,R[146],E,E,42,[[["self"]],[T]]],[11,R[141],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[139],E,E,42,[[[U]],[R[23]]]],[11,R[140],E,E,42,[[],[R[23]]]],[11,R[138],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[142],E,E,42,[[["self"]],["typeid"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[139],E,E,43,[[[U]],[R[23]]]],[11,R[140],E,E,43,[[],[R[23]]]],[11,R[138],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[142],E,E,43,[[["self"]],["typeid"]]],[11,R[143],E,E,43,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,R[146],E,E,44,[[["self"]],[T]]],[11,R[141],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[139],E,E,44,[[[U]],[R[23]]]],[11,R[140],E,E,44,[[],[R[23]]]],[11,R[138],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[142],E,E,44,[[["self"]],["typeid"]]],[11,"into",R[156],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[150],E,E,45,[[["self"]],["string"]]],[11,R[139],E,E,45,[[[U]],[R[23]]]],[11,R[140],E,E,45,[[],[R[23]]]],[11,R[138],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[142],E,E,45,[[["self"]],["typeid"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[150],E,E,85,[[["self"]],["string"]]],[11,R[139],E,E,85,[[[U]],[R[23]]]],[11,R[140],E,E,85,[[],[R[23]]]],[11,R[138],E,E,85,[[["self"]],[T]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[142],E,E,85,[[["self"]],["typeid"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[150],E,E,86,[[["self"]],["string"]]],[11,R[139],E,E,86,[[[U]],[R[23]]]],[11,R[140],E,E,86,[[],[R[23]]]],[11,R[138],E,E,86,[[["self"]],[T]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[142],E,E,86,[[["self"]],["typeid"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[150],E,E,46,[[["self"]],["string"]]],[11,R[139],E,E,46,[[[U]],[R[23]]]],[11,R[140],E,E,46,[[],[R[23]]]],[11,R[138],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[142],E,E,46,[[["self"]],["typeid"]]],[11,"into",R[116],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[139],E,E,48,[[[U]],[R[23]]]],[11,R[140],E,E,48,[[],[R[23]]]],[11,R[138],E,E,48,[[["self"]],[T]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[142],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[139],E,E,49,[[[U]],[R[23]]]],[11,R[140],E,E,49,[[],[R[23]]]],[11,R[138],E,E,49,[[["self"]],[T]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[142],E,E,49,[[["self"]],["typeid"]]],[11,R[157],E,E,49,[[["f"],[R[22]],["pin"]],["poll"]]],[11,"into",R[158],E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[150],E,E,87,[[["self"]],["string"]]],[11,R[139],E,E,87,[[[U]],[R[23]]]],[11,R[140],E,E,87,[[],[R[23]]]],[11,R[138],E,E,87,[[["self"]],[T]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[142],E,E,87,[[["self"]],["typeid"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[150],E,E,88,[[["self"]],["string"]]],[11,R[139],E,E,88,[[[U]],[R[23]]]],[11,R[140],E,E,88,[[],[R[23]]]],[11,R[138],E,E,88,[[["self"]],[T]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[142],E,E,88,[[["self"]],["typeid"]]],[11,"into",R[159],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[139],E,E,50,[[[U]],[R[23]]]],[11,R[140],E,E,50,[[],[R[23]]]],[11,R[138],E,E,50,[[["self"]],[T]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[142],E,E,50,[[["self"]],["typeid"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[139],E,E,51,[[[U]],[R[23]]]],[11,R[140],E,E,51,[[],[R[23]]]],[11,R[138],E,E,51,[[["self"]],[T]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[142],E,E,51,[[["self"]],["typeid"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[150],E,E,89,[[["self"]],["string"]]],[11,R[139],E,E,89,[[[U]],[R[23]]]],[11,R[140],E,E,89,[[],[R[23]]]],[11,R[138],E,E,89,[[["self"]],[T]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[142],E,E,89,[[["self"]],["typeid"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[150],E,E,52,[[["self"]],["string"]]],[11,R[139],E,E,52,[[[U]],[R[23]]]],[11,R[140],E,E,52,[[],[R[23]]]],[11,R[138],E,E,52,[[["self"]],[T]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[142],E,E,52,[[["self"]],["typeid"]]],[11,R[146],R[123],E,53,[[["self"]],[T]]],[11,R[141],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[139],E,E,53,[[[U]],[R[23]]]],[11,R[140],E,E,53,[[],[R[23]]]],[11,R[138],E,E,53,[[["self"]],[T]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[142],E,E,53,[[["self"]],["typeid"]]],[11,R[143],E,E,53,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[139],E,E,54,[[[U]],[R[23]]]],[11,R[140],E,E,54,[[],[R[23]]]],[11,R[138],E,E,54,[[["self"]],[T]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[142],E,E,54,[[["self"]],["typeid"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[139],E,E,90,[[[U]],[R[23]]]],[11,R[140],E,E,90,[[],[R[23]]]],[11,R[138],E,E,90,[[["self"]],[T]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[142],E,E,90,[[["self"]],["typeid"]]],[11,"into",R[160],E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[150],E,E,91,[[["self"]],["string"]]],[11,R[139],E,E,91,[[[U]],[R[23]]]],[11,R[140],E,E,91,[[],[R[23]]]],[11,R[138],E,E,91,[[["self"]],[T]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[142],E,E,91,[[["self"]],["typeid"]]],[11,"into",R[161],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[150],E,E,55,[[["self"]],["string"]]],[11,R[139],E,E,55,[[[U]],[R[23]]]],[11,R[140],E,E,55,[[],[R[23]]]],[11,R[138],E,E,55,[[["self"]],[T]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[142],E,E,55,[[["self"]],["typeid"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[139],E,E,92,[[[U]],[R[23]]]],[11,R[140],E,E,92,[[],[R[23]]]],[11,R[138],E,E,92,[[["self"]],[T]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[142],E,E,92,[[["self"]],["typeid"]]],[11,R[157],E,E,92,[[["f"],[R[22]],["pin"]],["poll"]]],[11,R[146],R[134],E,93,[[["self"]],[T]]],[11,R[141],E,E,93,[[["self"],[T]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[139],E,E,93,[[[U]],[R[23]]]],[11,R[140],E,E,93,[[],[R[23]]]],[11,R[138],E,E,93,[[["self"]],[T]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[142],E,E,93,[[["self"]],["typeid"]]],[11,"into",R[162],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[139],E,E,56,[[[U]],[R[23]]]],[11,R[140],E,E,56,[[],[R[23]]]],[11,R[138],E,E,56,[[["self"]],[T]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[142],E,E,56,[[["self"]],["typeid"]]],[11,"into",R[134],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[139],E,E,58,[[[U]],[R[23]]]],[11,R[140],E,E,58,[[],[R[23]]]],[11,R[138],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[142],E,E,58,[[["self"]],["typeid"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[150],E,E,59,[[["self"]],["string"]]],[11,R[139],E,E,59,[[[U]],[R[23]]]],[11,R[140],E,E,59,[[],[R[23]]]],[11,R[138],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[142],E,E,59,[[["self"]],["typeid"]]],[11,R[146],E,E,60,[[["self"]],[T]]],[11,R[141],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[139],E,E,60,[[[U]],[R[23]]]],[11,R[140],E,E,60,[[],[R[23]]]],[11,R[138],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[142],E,E,60,[[["self"]],["typeid"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[139],E,E,61,[[[U]],[R[23]]]],[11,R[140],E,E,61,[[],[R[23]]]],[11,R[138],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[142],E,E,61,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[139],E,E,62,[[[U]],[R[23]]]],[11,R[140],E,E,62,[[],[R[23]]]],[11,R[138],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[142],E,E,62,[[["self"]],["typeid"]]],[11,R[157],E,E,62,[[["f"],[R[22]],["pin"]],["poll"]]],[11,"into",R[162],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[139],E,E,57,[[[U]],[R[23]]]],[11,R[140],E,E,57,[[],[R[23]]]],[11,R[138],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[142],E,E,57,[[["self"]],["typeid"]]],[11,R[146],E,E,94,[[["self"]],[T]]],[11,R[141],E,E,94,[[["self"],[T]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[139],E,E,94,[[[U]],[R[23]]]],[11,R[140],E,E,94,[[],[R[23]]]],[11,R[138],E,E,94,[[["self"]],[T]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[142],E,E,94,[[["self"]],["typeid"]]],[11,"from",R[11],"Converts an [`ErrorKind`] into an [`Error`].",63,[[[R[163]]],["error"]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",63,[[["nulerror"]],["error"]]],[11,"from",E,E,63,[[["intoinnererror"]],["error"]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"eq",E,E,4,[[["self"],[R[163]]],["bool"]]],[11,"description",E,E,63,[[["self"]],["str"]]],[11,"cause",E,E,63,[[["self"]],[[R[30],["error"]],["error"]]]],[11,"source",E,E,63,[[["self"]],[["error"],[R[30],["error"]]]]],[11,"fmt",E,E,63,[[["self"],[R[164]]],[[R[23],["error"]],["error"]]]],[11,"cmp",E,E,4,[[["self"],[R[163]]],[R[165]]]],[11,"fmt",E,E,63,[[["self"],[R[164]]],[[R[23],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[164]]],[[R[23],["error"]],["error"]]]],[11,"clone",E,E,4,[[["self"]],[R[163]]]],[11,R[166],E,E,4,[[["self"],[R[163]]],[[R[165]],[R[30],[R[165]]]]]],[11,"fmt",R[134],E,93,[[["self"],[R[164]]],[[R[23],["error"]],["error"]]]],[11,"div_assign",E,E,93,[[["self"],["u32"]]]],[11,R[173],E,E,93,[[["self"],[R[29]]]]],[11,"div",E,E,93,[[["u32"]],[R[29]]]],[11,"hash",E,E,93,[[["self"],["__h"]]]],[11,"mul",E,E,93,[[["u32"]],[R[29]]]],[11,"sum",E,E,93,[[["i"]],[R[29]]]],[11,"sum",E,E,93,[[["i"]],[R[29]]]],[11,"mul_assign",E,E,93,[[["self"],["u32"]]]],[11,"sub",E,E,93,[[[R[29]]],[R[29]]]],[11,"eq",E,E,93,[[["self"],[R[29]]],["bool"]]],[11,"ne",E,E,93,[[["self"],[R[29]]],["bool"]]],[11,"clone",E,E,93,[[["self"]],[R[29]]]],[11,R[166],E,E,93,[[["self"],[R[29]]],[[R[165]],[R[30],[R[165]]]]]],[11,"lt",E,E,93,[[["self"],[R[29]]],["bool"]]],[11,"le",E,E,93,[[["self"],[R[29]]],["bool"]]],[11,"gt",E,E,93,[[["self"],[R[29]]],["bool"]]],[11,"ge",E,E,93,[[["self"],[R[29]]],["bool"]]],[11,R[169],E,E,93,[[],[R[29]]]],[11,"add",E,E,93,[[[R[29]]],[R[29]]]],[11,R[174],E,E,93,[[["self"],[R[29]]]]],[11,"cmp",E,E,93,[[["self"],[R[29]]],[R[165]]]],[11,R[85],R[11],E,6,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[167],E,E,6,[[["pin"],["self"],["usize"]]]],[11,R[85],E,E,7,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[167],E,E,7,[[["pin"],["self"],["usize"]]]],[11,R[85],E,E,8,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[167],E,E,8,[[["pin"],["self"],["usize"]]]],[11,R[85],E,E,65,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[167],E,E,65,[[["pin"],["self"],["usize"]]]],[11,R[85],E,E,11,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[167],E,E,11,[[["pin"],["self"],["usize"]]]],[11,R[91],R[7],E,0,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[91],R[144],E,5,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],E,E,5,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[91],R[11],E,6,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],E,E,6,[[["self"]],["bool"]]],[11,R[91],E,E,7,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],E,E,7,[[["self"]],["bool"]]],[11,R[91],E,E,8,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],E,E,8,[[["self"]],["bool"]]],[11,R[91],E,E,65,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[91],E,E,66,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],E,E,11,[[["self"]],["bool"]]],[11,R[91],E,E,11,[[["self"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[11,R[91],E,E,69,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[91],R[147],E,20,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],R[148],E,75,[[["self"]],["bool"]]],[11,R[91],E,E,75,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],E,E,75,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],R[31],E,22,[[["self"]],["bool"]]],[11,R[91],E,E,22,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],E,E,22,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],R[151],E,78,[[["self"]],["bool"]]],[11,R[91],E,E,78,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],E,E,78,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[89],R[31],E,30,[[["self"]],["bool"]]],[11,R[91],E,E,30,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[94],E,E,30,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[91],R[152],E,81,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[91],E,E,82,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],R[7],E,0,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,0,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[102],E,E,0,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[98],R[144],E,71,[[["self"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[11,R[100],E,E,71,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[102],E,E,71,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[104],E,E,71,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[11,R[98],R[11],E,6,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,6,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,6,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[98],E,E,7,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,7,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,7,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[98],E,E,8,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,8,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,8,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[98],E,E,67,[[["self"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[11,R[100],E,E,67,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[102],E,E,67,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[98],E,E,68,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,68,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[102],E,E,68,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[98],E,E,70,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,70,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[102],E,E,70,[[["pin"],["self"],[R[22]]],[[R[23],["error"]],["poll",[R[23]]]]]],[11,R[98],R[147],E,20,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,20,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,20,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[98],R[148],E,76,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,76,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,76,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[104],E,E,76,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],R[31],E,22,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,22,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,22,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[104],E,E,22,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],R[151],E,79,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,79,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,79,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[104],E,E,79,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],R[31],E,30,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,30,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,30,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[104],E,E,30,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],R[152],E,80,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,80,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,80,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,"unpark",R[145],E,18,[[["self"]]]],[11,"park",E,E,18,[[["self"]],[R[23]]]],[11,R[168],E,E,18,[[["self"],[R[29]]],[R[23]]]],[11,"unpark",E,E,73,[[["self"]]]],[11,"drop",E,E,72,[[["self"]]]],[11,"drop",E,E,19,[[["self"]]]],[11,"drop",R[147],E,20,[[["self"]]]],[11,"drop",R[114],E,84,[[["self"]]]],[11,"drop",R[116],E,48,[[["self"]]]],[11,"drop",E,E,49,[[["self"]]]],[11,"drop",R[123],E,53,[[["self"]]]],[11,"drop",E,E,54,[[["self"]]]],[11,"drop",R[161],E,92,[[["self"]]]],[11,R[169],R[7],E,1,[[],["self"]]],[11,R[169],R[153],E,33,[[],["self"]]],[11,R[169],R[114],E,47,[[],["self"]]],[11,R[169],R[159],E,51,[[],["self"]]],[11,R[169],R[162],E,56,[[],[R[132]]]],[11,"clone",R[7],E,1,[[["self"]],[R[5]]]],[11,"clone",R[145],E,73,[[["self"]],["handle"]]],[11,"clone",R[80],E,27,[[["self"]],["ucred"]]],[11,"clone",R[153],E,34,[[["self"]],["handle"]]],[11,"clone",R[154],E,38,[[["self"]],[R[170]]]],[11,"clone",R[114],E,40,[[["self"]],["barrierwaitresult"]]],[11,"clone",R[155],E,42,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",R[123],E,53,[[["self"]],["self"]]],[11,"clone",R[162],E,94,[[["self"]],["key"]]],[11,"clone",R[134],E,60,[[["self"]],[R[135]]]],[11,"as_ref",R[148],E,75,[[["self"]],[R[46]]]],[11,"as_ref",E,E,76,[[["self"]],[R[46]]]],[11,"as_ref",R[149],E,26,[[["self"]],[R[52]]]],[11,"as_ref",E,E,25,[[["self"]],[R[52]]]],[11,"as_ref",R[151],E,78,[[["self"]],[R[81]]]],[11,"as_ref",E,E,79,[[["self"]],[R[81]]]],[11,R[166],R[134],E,60,[[["self"],[R[135]]],[[R[30],[R[165]]],[R[165]]]]],[11,"lt",E,E,60,[[["self"],[R[135]]],["bool"]]],[11,"le",E,E,60,[[["self"],[R[135]]],["bool"]]],[11,"gt",E,E,60,[[["self"],[R[135]]],["bool"]]],[11,"ge",E,E,60,[[["self"],[R[135]]],["bool"]]],[11,"eq",R[80],E,27,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,27,[[["self"],["ucred"]],["bool"]]],[11,"eq",R[134],E,60,[[["self"],[R[135]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[135]]],["bool"]]],[11,"from",R[7],E,0,[[["file"]],["self"]]],[11,"from",E,E,1,[[[R[5]]],[R[5]]]],[11,"from",R[11],E,7,[[[R[172],[R[171]]],[R[171]]],["self"]]],[11,"from",E,E,7,[[[R[171],[R[172]]],[R[172]]],["self"]]],[11,"from",R[152],E,31,[[["stdcommand"]],[R[106]]]],[11,"from",R[156],E,45,[[],[R[113]]]],[11,"from",E,E,46,[[],[R[110]]]],[11,"from",E,E,46,[[[R[113]]],[R[110]]]],[11,"from",R[114],E,47,[[[T]],["self"]]],[11,"from",R[11],E,63,[[[R[126]]],["error"]]],[11,R[283],R[114],E,84,[[["self"]]]],[11,"hash",R[80],E,27,[[["self"],["__h"]]]],[11,"add",R[134],E,60,[[[R[29]]],[R[135]]]],[11,"sub",E,E,60,[[[R[135]]],[R[29]]]],[11,"sub",E,E,60,[[[R[29]]],[R[135]]]],[11,R[173],E,E,60,[[["self"],[R[29]]]]],[11,R[174],E,E,60,[[["self"],[R[29]]]]],[11,"deref",R[114],E,84,[[["self"]]]],[11,"deref",R[123],E,90,[[["self"]],[T]]],[11,"fmt",R[7],E,0,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,1,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,2,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,3,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[144],E,5,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,71,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[11],E,6,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,7,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,8,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,64,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,65,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,9,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,66,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,67,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,10,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,11,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,68,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,69,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,70,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[145],E,72,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,18,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,73,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,19,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[147],E,20,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[31],E,21,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[42],E,74,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[148],E,75,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,76,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[31],E,22,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,23,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[149],E,26,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,25,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,24,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[31],E,28,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[80],E,77,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[31],E,29,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[151],E,78,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,79,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[31],E,30,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[80],E,27,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[152],E,31,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,32,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,80,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,81,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,82,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[153],E,33,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,34,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,37,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[154],E,38,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,83,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[114],E,39,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,40,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[155],E,42,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,41,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,44,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,43,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[156],E,45,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,46,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,85,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,86,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[114],E,47,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,84,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[116],E,48,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,49,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[158],E,87,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,88,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[159],E,51,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,89,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,52,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,50,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[123],E,53,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,54,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,90,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[160],E,91,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[161],E,55,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,92,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[162],E,56,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,57,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,94,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[134],E,58,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,59,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,60,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,61,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,62,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[149],E,24,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[156],E,45,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,46,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,85,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,86,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[114],E,84,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[158],E,87,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,88,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[159],E,89,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,52,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[160],E,91,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[161],E,55,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[134],E,59,[[["self"],[R[164]]],[R[23]]]],[11,R[139],R[31],R[175],21,[[[R[39]]],[R[23]]]],[11,R[139],E,R[175],22,[[[R[46]]],[R[23]]]],[11,R[139],E,R[175],23,[[[R[52]]],[R[23]]]],[11,R[139],E,R[175],28,[[[R[70]]],[R[23]]]],[11,R[139],E,R[175],29,[[[R[76]]],[R[23]]]],[11,R[139],E,R[175],30,[[[R[81]]],[R[23]]]],[11,R[176],R[145],E,18,[[["self"]],["rawfd"]]],[11,R[176],R[31],E,21,[[["self"]],["rawfd"]]],[11,R[176],E,E,22,[[["self"]],["rawfd"]]],[11,R[176],E,E,23,[[["self"]],["rawfd"]]],[11,R[176],E,E,28,[[["self"]],["rawfd"]]],[11,R[176],E,E,29,[[["self"]],["rawfd"]]],[11,R[176],E,E,30,[[["self"]],["rawfd"]]],[11,R[176],R[152],E,80,[[["self"]],["rawfd"]]],[11,R[176],E,E,81,[[["self"]],["rawfd"]]],[11,R[176],E,E,82,[[["self"]],["rawfd"]]],[11,"ino",R[7],E,3,[[["self"]],["u64"]]],[11,"poll",R[11],E,64,[[["pin"],["self"],[R[22]]],[[R[23],["u64"]],["poll",[R[23]]]]]],[11,"poll",R[152],E,32,[[["pin"],["self"],[R[22]]],["poll"]]],[11,"poll",R[116],E,49,[[["pin"],["self"],[R[22]]],["poll"]]],[11,"poll",R[161],E,92,[[["pin"],["self"],[R[22]]],["poll"]]],[11,"poll",R[134],E,58,[[["pin"],["self"],[R[22]]],["poll"]]],[11,"poll",E,E,62,[[["pin"],["self"],[R[22]]],["poll"]]],[11,R[177],R[7],E,2,[[["pin"],["self"],[R[22]]],[["poll",[R[30]]],[R[30]]]]],[11,R[177],R[11],E,9,[[["pin"],["self"],[R[22]]],[["poll",[R[30]]],[R[30]]]]],[11,R[177],E,E,10,[[["pin"],["self"],[R[22]]],[["poll",[R[30]]],[R[30]]]]],[11,R[177],R[42],E,74,[[["pin"],["self"],[R[22]]],[["poll",[R[30]]],[R[30]]]]],[11,R[177],R[80],E,77,[[["pin"],["self"],[R[22]]],[["poll",[R[30]]],[R[30]]]]],[11,R[177],R[155],E,41,[[["self"],[R[22]],["pin"]],[[R[30]],["poll",[R[30]]]]]],[11,R[177],E,E,43,[[["self"],[R[22]],["pin"]],[[R[30]],["poll",[R[30]]]]]],[11,R[177],R[123],E,53,[[["self"],[R[22]],["pin"]],[[R[30]],["poll",[R[30]]]]]],[11,R[177],R[134],E,61,[[["pin"],["self"],[R[22]]],[[R[30],[R[135]]],["poll",[R[30]]]]]],[11,"new",R[11],"Creates a new I/O error from a known kind of error as well…",63,[[[R[163]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",63,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",63,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",63,[[["self"]],[[R[30],["i32"]],["i32"]]]],[11,R[15],E,"Returns a reference to the inner error wrapped by this…",63,[[["self"]],[["error"],[R[30],["error"]]]]],[11,R[16],E,"Returns a mutable reference to the inner error wrapped by…",63,[[["self"]],[["error"],[R[30],["error"]]]]],[11,R[13],E,"Consumes the `Error`, returning its inner error (if any).",63,[[],[[R[30],["box"]],["box",["error"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",63,[[["self"]],[R[163]]]],[11,R[89],E,R[90],13,[[["self"]],["bool"]]],[11,R[94],E,R[95],13,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[104],E,R[105],14,[[["self"],["b"],["pin"],[R[22]]],[[R[23],["usize","error"]],["poll",[R[23]]]]]],[11,R[178],E,R[24],15,[[["vec"],["self"],["u8"]],[R[179]]]],[11,R[180],E,R[24],15,[[["self"],["string"]],["readline"]]],[11,"split",E,R[181],15,[[["u8"]],["split"]]],[11,"lines",E,R[182],15,[[],["lines"]]],[11,"chain",E,R[183],16,[[["r"]],["chain"]]],[11,"copy",E,R[184],16,[[["self"],["w"]],[["sized"],["copy"]]]],[11,"read",E,R[185],16,[[["self"]],["read"]]],[11,R[186],E,R[187],16,[[["self"]],[R[188]]]],[11,R[189],E,R[27],16,[[["vec"],["self"]],[R[190]]]],[11,R[26],E,R[27],16,[[["self"],["string"]],[R[191]]]],[11,"take",E,R[192],16,[[["u64"]],["take"]]],[11,"write",E,R[193],17,[[["self"]],["write"]]],[11,R[194],E,R[195],17,[[["self"]],["writeall"]]],[11,"flush",E,R[196],17,[[["self"]],["flush"]]],[11,R[28],E,R[197],17,[[["self"]],[R[28]]]],[18,"SECOND",R[134],"The duration of one second.",93,N],[18,"MILLISECOND",E,"The duration of one millisecond.",93,N],[18,"MICROSECOND",E,"The duration of one microsecond.",93,N],[18,"NANOSECOND",E,"The duration of one nanosecond.",93,N],[11,"new",E,R[198],93,[[["u32"],["u64"]],[R[29]]]],[11,"from_secs",E,R[198],93,[[["u64"]],[R[29]]]],[11,"from_millis",E,R[198],93,[[["u64"]],[R[29]]]],[11,"from_micros",E,R[198],93,[[["u64"]],[R[29]]]],[11,"from_nanos",E,R[198],93,[[["u64"]],[R[29]]]],[11,"as_secs",E,"Returns the number of whole seconds contained by this…",93,[[["self"]],["u64"]]],[11,"subsec_millis",E,R[199],93,[[["self"]],["u32"]]],[11,"subsec_micros",E,R[199],93,[[["self"]],["u32"]]],[11,"subsec_nanos",E,"Returns the fractional part of this `Duration`, in…",93,[[["self"]],["u32"]]],[11,"as_millis",E,"Returns the total number of whole milliseconds contained…",93,[[["self"]],["u128"]]],[11,"as_micros",E,"Returns the total number of whole microseconds contained…",93,[[["self"]],["u128"]]],[11,"as_nanos",E,"Returns the total number of nanoseconds contained by this…",93,[[["self"]],["u128"]]],[11,R[200],E,"Checked `Duration` addition. Computes `self + other`,…",93,[[[R[29]]],[[R[30],[R[29]]],[R[29]]]]],[11,R[201],E,"Checked `Duration` subtraction. Computes `self - other`,…",93,[[[R[29]]],[[R[30],[R[29]]],[R[29]]]]],[11,"checked_mul",E,"Checked `Duration` multiplication. Computes `self *…",93,[[["u32"]],[[R[30],[R[29]]],[R[29]]]]],[11,"checked_div",E,"Checked `Duration` division. Computes `self / other`,…",93,[[["u32"]],[[R[30],[R[29]]],[R[29]]]]],[11,"as_secs_f64",E,R[202],93,[[["self"]],["f64"]]],[11,"as_secs_f32",E,R[202],93,[[["self"]],["f32"]]],[11,"from_secs_f64",E,R[198],93,[[["f64"]],[R[29]]]],[11,"from_secs_f32",E,R[198],93,[[["f32"]],[R[29]]]],[11,"mul_f64",E,"Multiplies `Duration` by `f64`.",93,[[["f64"]],[R[29]]]],[11,"mul_f32",E,"Multiplies `Duration` by `f32`.",93,[[["f32"]],[R[29]]]],[11,"div_f64",E,"Divide `Duration` by `f64`.",93,[[["f64"]],[R[29]]]],[11,"div_f32",E,"Divide `Duration` by `f32`.",93,[[["f32"]],[R[29]]]],[11,"div_duration_f64",E,"Divide `Duration` by `Duration` and return `f64`.",93,[[[R[29]]],["f64"]]],[11,"div_duration_f32",E,"Divide `Duration` by `Duration` and return `f32`.",93,[[[R[29]]],["f32"]]]],"p":[[3,"File"],[3,R[203]],[3,"ReadDir"],[3,"DirEntry"],[4,R[204]],[3,R[43]],[3,R[205]],[3,R[206]],[3,R[207]],[3,"Lines"],[3,"Split"],[3,"Take"],[8,R[84]],[8,R[88]],[8,R[96]],[8,R[208]],[8,R[209]],[8,R[210]],[3,"Reactor"],[3,R[211]],[3,R[212]],[3,R[34]],[3,R[36]],[3,R[50]],[3,R[213]],[3,R[214]],[3,R[215]],[3,"UCred"],[3,R[63]],[3,R[66]],[3,R[68]],[3,"Command"],[3,"Child"],[3,R[285]],[3,"Handle"],[8,"Park"],[8,"Unpark"],[3,"Runtime"],[3,R[216]],[3,"Barrier"],[3,R[217]],[3,R[121]],[3,"Sender"],[3,R[218]],[3,R[219]],[3,R[122]],[4,R[220]],[3,"Mutex"],[3,"Sender"],[3,R[121]],[3,R[221]],[3,"Permit"],[3,R[222]],[3,R[121]],[3,"Sender"],[3,R[223]],[3,R[131]],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Error"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[44]],[3,R[224]],[3,"Handle"],[3,R[65]],[3,R[43]],[3,R[44]],[3,R[65]],[3,R[43]],[3,R[44]],[3,R[225]],[3,R[226]],[3,R[227]],[3,"Signal"],[3,R[228]],[3,R[115]],[3,R[229]],[3,R[115]],[3,R[230]],[3,R[231]],[3,"Ref"],[3,R[122]],[3,R[232]],[3,"Duration"],[3,"Key"]]};
searchIndex["tokio_macros"]={"doc":"Macros for use with Tokio","i":[[23,"main","tokio_macros",R[233],N,N],[23,"test",E,R[234],N,N]],"p":[]};
searchIndex["tokio_test"]={"doc":"Tokio and Futures based testing utilites","i":[[5,"block_on",R[280],"Runs the provided future, blocking the current thread…",N,[[["future"]]]],[0,"io",E,"A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",N,N],[3,"Mock",R[281],"An I/O object that follows a predefined script.",N,N],[3,"Handle",E,"A handle to send additional actions to the related `Mock`.",N,N],[3,R[285],E,"Builds `Mock` instances.",N,N],[11,"new",E,"Return a new, empty `Builder.",0,[[],["self"]]],[11,"read",E,R[278],0,[[["self"]],["self"]]],[11,"write",E,R[279],0,[[["self"]],["self"]]],[11,"wait",E,"Sequence a wait.",0,[[["self"],[R[29]]],["self"]]],[11,"build",E,"Build a `Mock` value according to the defined script.",0,[[["self"]],["mock"]]],[11,"build_with_handle",E,"Build a `Mock` value paired with a handle",0,[[["self"]]]],[11,"read",E,R[278],1,[[["self"]],["self"]]],[11,"write",E,R[279],1,[[["self"]],["self"]]],[0,"task",R[280],"Futures task based helpers",N,N],[3,"Spawn",R[282],"Future spawned on a mock task",N,N],[5,"spawn",E,"TOOD: dox",N,[[[T]],["spawn"]]],[11,R[13],E,"Consume `self` returning the inner value",2,[[],[T]]],[11,"is_woken",E,"Returns `true` if the inner future has received a wake…",2,[[["self"]],["bool"]]],[11,"waker_ref_count",E,"Returns the number of references to the task waker",2,[[["self"]],["usize"]]],[11,"enter",E,"Enter the task context",2,[[["self"],["f"]],["r"]]],[11,"poll",E,"Poll a future",2,[[["self"]],["poll"]]],[11,R[177],E,"Poll a stream",2,[[["self"]],[["poll",[R[30]]],[R[30]]]]],[14,"assert_ready",R[280],"Assert a `Poll` is ready, returning the value.",N,N],[14,"assert_ready_ok",E,"Assert a `Poll<Result<...>>` is ready and `Ok`, returning…",N,N],[14,"assert_ready_err",E,"Assert a `Poll<Result<...>>` is ready and `Err`, returning…",N,N],[14,"assert_pending",E,"Assert a `Poll` is pending.",N,N],[14,"assert_ready_eq",E,"Assert if a poll is ready and check for equality on the…",N,N],[14,"assert_ok",E,"Asserts that the expression evaluates to `Ok` and returns…",N,N],[14,"assert_err",E,"Asserts that the expression evaluates to `Err` and returns…",N,N],[11,"into",R[281],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[139],E,E,3,[[[U]],[R[23]]]],[11,R[140],E,E,3,[[],[R[23]]]],[11,R[138],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[142],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[139],E,E,1,[[[U]],[R[23]]]],[11,R[140],E,E,1,[[],[R[23]]]],[11,R[138],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[142],E,E,1,[[["self"]],["typeid"]]],[11,R[146],E,E,0,[[["self"]],[T]]],[11,R[141],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[139],E,E,0,[[[U]],[R[23]]]],[11,R[140],E,E,0,[[],[R[23]]]],[11,R[138],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[142],E,E,0,[[["self"]],["typeid"]]],[11,"into",R[282],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[139],E,E,2,[[[U]],[R[23]]]],[11,R[140],E,E,2,[[],[R[23]]]],[11,R[138],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[142],E,E,2,[[["self"]],["typeid"]]],[11,"load",E,E,2,[[["self"]]]],[11,"load",E,E,2,[[["self"]],["dynguard"]]],[11,R[169],R[281],E,0,[[],[R[284]]]],[11,"clone",E,E,0,[[["self"]],[R[284]]]],[11,R[283],R[282],E,2,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",R[281],E,3,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,1,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,0,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[282],E,2,[[["self"],[R[164]]],[R[23]]]],[11,R[91],R[281],E,3,[[["self"],[R[22]],["pin"]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],E,E,3,[[["self"],[R[22]],["pin"]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[104],E,E,3,[[["self"],[R[22]],["b"],["pin"]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,3,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,3,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]]],"p":[[3,R[285]],[3,"Handle"],[3,"Spawn"],[3,"Mock"]]};
searchIndex["tokio_tls"]={"doc":"Async TLS streams","i":[[3,R[237],"tokio_tls","A wrapper around an underlying raw stream which implements…",N,N],[3,R[238],E,"A wrapper around a `native_tls::TlsConnector`, providing…",N,N],[3,R[239],E,"A wrapper around a `native_tls::TlsAcceptor`, providing an…",N,N],[11,R[15],E,"Returns a shared reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[16],E,"Returns a mutable reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[71],E,"Connects the provided stream with this connector, assuming…",1,[[["self"],["str"],["s"]]]],[11,"accept",E,"Accepts a new client connection with the provided stream.",2,[[["self"],["s"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[139],E,E,0,[[[U]],[R[23]]]],[11,R[140],E,E,0,[[],[R[23]]]],[11,R[138],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[142],E,E,0,[[["self"]],["typeid"]]],[11,R[146],E,E,1,[[["self"]],[T]]],[11,R[141],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[139],E,E,1,[[[U]],[R[23]]]],[11,R[140],E,E,1,[[],[R[23]]]],[11,R[138],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[142],E,E,1,[[["self"]],["typeid"]]],[11,R[146],E,E,2,[[["self"]],[T]]],[11,R[141],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[139],E,E,2,[[[U]],[R[23]]]],[11,R[140],E,E,2,[[],[R[23]]]],[11,R[138],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[142],E,E,2,[[["self"]],["typeid"]]],[11,"clone",E,E,1,[[["self"]],[R[235]]]],[11,"clone",E,E,2,[[["self"]],[R[236]]]],[11,"from",E,E,1,[[[R[235]]],[R[235]]]],[11,"from",E,E,2,[[[R[236]]],[R[236]]]],[11,"fmt",E,E,0,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,1,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,2,[[["self"],[R[164]]],[R[23]]]],[11,R[89],E,E,0,[[["self"]],["bool"]]],[11,R[91],E,E,0,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[98],E,E,0,[[["self"],["pin"],[R[22]]],[[R[23],["usize"]],["poll",[R[23]]]]]],[11,R[100],E,E,0,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]],[11,R[102],E,E,0,[[["pin"],["self"],[R[22]]],[["poll",[R[23]]],[R[23]]]]]],"p":[[3,R[237]],[3,R[238]],[3,R[239]]]};
searchIndex["tokio_util"]={"doc":"Utilities for working with Tokio.","i":[[0,"codec",R[257],"Utilities for encoding and decoding frames.",N,N],[3,R[271],R[253],"A simple `Codec` implementation that just ships bytes…",N,N],[3,"Framed",E,R[258],N,N],[3,R[269],E,"`FramedParts` contains an export of the data of a Framed…",N,N],[12,"io",E,"The inner transport used to read bytes to and write bytes to",0,N],[12,"codec",E,"The codec",0,N],[12,"read_buf",E,"The buffer with read but unprocessed data.",0,N],[12,"write_buf",E,"A buffer with unprocessed data which are not written yet.",0,N],[3,R[272],E,"A `Stream` of messages decoded from an `AsyncRead`.",N,N],[3,R[273],E,"A `Sink` of frames encoded to an `AsyncWrite`.",N,N],[3,R[275],E,"A simple `Codec` implementation that splits up data into…",N,N],[4,R[270],E,"An error occured while encoding or decoding a line.",N,N],[13,"MaxLineLengthExceeded",E,"The maximum line length was exceeded.",1,N],[13,"Io",E,"An IO error occured.",1,N],[11,"new",E,"Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],[R[263]]]],[11,"new",E,R[240],3,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[240],3,[[[R[241]]],["framed"]]],[11,R[15],E,R[242],3,[[["self"]],[T]]],[11,R[16],E,R[243],3,[[["self"]],[T]]],[11,"codec",E,"Returns a reference to the underlying codec wrapped by…",3,[[["self"]],[U]]],[11,"codec_mut",E,"Returns a mutable reference to the underlying codec…",3,[[["self"]],[U]]],[11,R[244],E,R[245],3,[[["self"]],[R[254]]]],[11,R[13],E,"Consumes the `Frame`, returning its underlying I/O stream.",3,[[],[T]]],[11,"into_parts",E,"Consumes the `Frame`, returning its underlying I/O stream,…",3,[[],[R[241]]]],[11,"new",E,"Create a new, default, `FramedParts`",0,[[[U],[T]],[R[241]]]],[11,"new",E,"Creates a new `FramedRead` with the given `decoder`.",4,[[["d"],[T]],[R[251]]]],[11,R[15],E,R[242],4,[[["self"]],[T]]],[11,R[16],E,R[243],4,[[["self"]],[T]]],[11,R[13],E,"Consumes the `FramedRead`, returning its underlying I/O…",4,[[],[T]]],[11,"decoder",E,R[246],4,[[["self"]],["d"]]],[11,"decoder_mut",E,R[247],4,[[["self"]],["d"]]],[11,R[244],E,R[245],4,[[["self"]],[R[254]]]],[11,"new",E,"Creates a new `FramedWrite` with the given `encoder`.",5,[[[T],["e"]],[R[252]]]],[11,R[15],E,R[242],5,[[["self"]],[T]]],[11,R[16],E,R[243],5,[[["self"]],[T]]],[11,R[13],E,"Consumes the `FramedWrite`, returning its underlying I/O…",5,[[],[T]]],[11,"encoder",E,R[246],5,[[["self"]],["e"]]],[11,"encoder_mut",E,R[247],5,[[["self"]],["e"]]],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,R[285],R[259],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[277],E,"An error when the number of bytes read is more than max…",N,N],[3,R[274],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",6,[[],["self"]]],[11,R[284],E,R[248],6,[[],[R[284]]]],[11,R[249],E,"Returns the current max frame setting",6,[[["self"]],["usize"]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",6,[[["self"],["usize"]]]],[11,"new",E,R[248],7,[[],[R[284]]]],[11,"big_endian",E,"Read the length field as a big endian integer",7,[[["self"]],["self"]]],[11,"little_endian",E,"Read the length field as a little endian integer",7,[[["self"]],["self"]]],[11,"native_endian",E,"Read the length field as a native endian integer",7,[[["self"]],["self"]]],[11,R[249],E,"Sets the max frame length",7,[[["self"],["usize"]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",7,[[["self"],["usize"]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",7,[[["self"],["usize"]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",7,[[["self"],["isize"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",7,[[["self"],["usize"]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",7,[[["self"]],[R[250]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",7,[[["self"],[T]],[[R[250]],[R[251],[R[250]]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",7,[[["self"],[T]],[[R[250]],[R[252],[R[250]]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",7,[[["self"],[T]],[["framed",[R[250]]],[R[250]]]]],[11,"new",R[253],"Returns a `LinesCodec` for splitting up data into lines.",8,[[],[R[264]]]],[11,"new_with_max_length",E,"Returns a `LinesCodec` with a maximum line length limit.",8,[[["usize"]],["self"]]],[11,"max_length",E,"Returns the maximum line length when decoding.",8,[[["self"]],["usize"]]],[8,"Decoder",E,"Decoding of frames via buffers.",N,N],[16,"Item",E,"The type of decoded frames.",9,N],[16,"Error",E,"The type of unrecoverable frame decoding errors.",9,N],[10,"decode",E,"Attempts to decode a frame from the provided buffer of…",9,[[["self"],[R[254]]],[[R[23],[R[30]]],[R[30]]]]],[11,R[262],E,R[268],9,[[["self"],[R[254]]],[[R[23],[R[30]]],[R[30]]]]],[11,"framed",E,R[240],9,[[[R[255]],[R[256]],["sized"]],[["sized"],[R[255]],["framed"],[R[256]]]]],[8,"Encoder",E,"Trait of helper objects to write out messages as bytes,…",N,N],[16,"Item",E,"The type of items consumed by the `Encoder`",10,N],[16,"Error",E,"The type of encoding errors.",10,N],[10,"encode",E,"Encodes a frame into the buffer provided.",10,[[["self"],[R[254]]],[R[23]]]],[0,"udp",R[257],"UDP framing",N,N],[3,R[276],R[260],R[258],N,N],[11,"new",E,"Create a new `UdpFramed` backed by the given socket and…",11,[[["c"],[R[52]]],["udpframed"]]],[11,R[15],E,R[242],11,[[["self"]],[R[52]]]],[11,R[16],E,R[243],11,[[["self"]],[R[52]]]],[11,R[13],E,"Consumes the `Framed`, returning its underlying I/O stream.",11,[[],[R[52]]]],[11,R[146],R[253],E,2,[[["self"]],[T]]],[11,R[141],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[139],E,E,2,[[[U]],[R[23]]]],[11,R[140],E,E,2,[[],[R[23]]]],[11,R[138],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[142],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[139],E,E,3,[[[U]],[R[23]]]],[11,R[140],E,E,3,[[],[R[23]]]],[11,R[138],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[142],E,E,3,[[["self"]],["typeid"]]],[11,R[143],E,E,3,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[139],E,E,0,[[[U]],[R[23]]]],[11,R[140],E,E,0,[[],[R[23]]]],[11,R[138],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[142],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[139],E,E,4,[[[U]],[R[23]]]],[11,R[140],E,E,4,[[],[R[23]]]],[11,R[138],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[142],E,E,4,[[["self"]],["typeid"]]],[11,R[143],E,E,4,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[139],E,E,5,[[[U]],[R[23]]]],[11,R[140],E,E,5,[[],[R[23]]]],[11,R[138],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[142],E,E,5,[[["self"]],["typeid"]]],[11,R[143],E,E,5,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,R[146],E,E,8,[[["self"]],[T]]],[11,R[141],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[139],E,E,8,[[[U]],[R[23]]]],[11,R[140],E,E,8,[[],[R[23]]]],[11,R[138],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[142],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[150],E,E,1,[[["self"]],["string"]]],[11,R[139],E,E,1,[[[U]],[R[23]]]],[11,R[140],E,E,1,[[],[R[23]]]],[11,R[138],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[142],E,E,1,[[["self"]],["typeid"]]],[11,R[146],R[259],E,7,[[["self"]],[T]]],[11,R[141],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[139],E,E,7,[[[U]],[R[23]]]],[11,R[140],E,E,7,[[],[R[23]]]],[11,R[138],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[142],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[150],E,E,12,[[["self"]],["string"]]],[11,R[139],E,E,12,[[[U]],[R[23]]]],[11,R[140],E,E,12,[[],[R[23]]]],[11,R[138],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[142],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[139],E,E,6,[[[U]],[R[23]]]],[11,R[140],E,E,6,[[],[R[23]]]],[11,R[138],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[142],E,E,6,[[["self"]],["typeid"]]],[11,"into",R[260],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[139],E,E,11,[[[U]],[R[23]]]],[11,R[140],E,E,11,[[],[R[23]]]],[11,R[138],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[142],E,E,11,[[["self"]],["typeid"]]],[11,R[143],E,E,11,[[["pin"],["s"],[R[22]]],[["poll",[R[30]]],[R[30],[R[23]]]]]],[11,"decode",R[253],E,2,[[["self"],[R[254]]],[[R[30],[R[254]]],["error"],[R[23],[R[30],"error"]]]]],[11,"decode",R[259],E,6,[[["self"],[R[254]]],[[R[30],[R[254]]],[R[23],[R[30]]]]]],[11,"decode",R[253],E,8,[[["self"],[R[254]]],[[R[30],["string"]],[R[23],[R[30],R[261]]],[R[261]]]]],[11,R[262],E,E,8,[[["self"],[R[254]]],[[R[30],["string"]],[R[23],[R[30],R[261]]],[R[261]]]]],[11,"encode",E,E,2,[[["self"],["bytes"],[R[254]]],[["error"],[R[23],["error"]]]]],[11,"encode",R[259],E,6,[[["self"],["bytes"],[R[254]]],[["error"],[R[23],["error"]]]]],[11,"encode",R[253],E,8,[[["self"],["string"],[R[254]]],[[R[23],[R[261]]],[R[261]]]]],[11,R[169],E,E,2,[[],[R[263]]]],[11,R[169],R[259],E,6,[[],["self"]]],[11,R[169],E,E,7,[[],["self"]]],[11,R[169],R[253],E,8,[[],["self"]]],[11,"clone",E,E,2,[[["self"]],[R[263]]]],[11,"clone",R[259],E,7,[[["self"]],[R[284]]]],[11,"clone",R[253],E,8,[[["self"]],[R[264]]]],[11,R[166],E,E,2,[[["self"],[R[263]]],[[R[30],[R[165]]],[R[165]]]]],[11,"lt",E,E,2,[[["self"],[R[263]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[263]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[263]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[263]]],["bool"]]],[11,R[166],E,E,8,[[["self"],[R[264]]],[[R[30],[R[165]]],[R[165]]]]],[11,"lt",E,E,8,[[["self"],[R[264]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[264]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[264]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[264]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[263]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[263]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[264]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[264]]],["bool"]]],[11,"cmp",E,E,2,[[["self"],[R[263]]],[R[165]]]],[11,"cmp",E,E,8,[[["self"],[R[264]]],[R[165]]]],[11,"from",E,E,1,[[["error"]],[R[261]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,3,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,0,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,4,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,5,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[259],E,7,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,6,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,12,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[253],E,8,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",E,E,1,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[260],E,11,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[259],E,12,[[["self"],[R[164]]],[R[23]]]],[11,"fmt",R[253],E,1,[[["self"],[R[164]]],[R[23]]]],[11,R[177],E,E,3,[[["pin"],["self"],[R[22]]],[[R[30]],["poll",[R[30]]]]]],[11,R[177],E,E,4,[[["pin"],["self"],[R[22]]],[[R[30]],["poll",[R[30]]]]]],[11,R[177],E,E,5,[[["pin"],["self"],[R[22]]],[[R[30]],["poll",[R[30]]]]]],[11,R[177],R[260],E,11,[[["pin"],["self"],[R[22]]],[[R[30]],["poll",[R[30]]]]]],[11,R[265],R[253],E,3,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[266],E,E,3,[[["pin"],["self"],["i"]],[R[23]]]],[11,R[100],E,E,3,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[267],E,E,3,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[265],E,E,4,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[266],E,E,4,[[["pin"],["self"],["i"]],[R[23]]]],[11,R[100],E,E,4,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[267],E,E,4,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[265],E,E,5,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[266],E,E,5,[[["pin"],["self"],["i"]],[R[23]]]],[11,R[100],E,E,5,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[267],E,E,5,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[265],R[260],E,11,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[266],E,E,11,[[["pin"],["self"]],[R[23]]]],[11,R[100],E,E,11,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[267],E,E,11,[[["pin"],["self"],[R[22]]],[[R[23]],["poll",[R[23]]]]]],[11,R[262],R[253],R[268],9,[[["self"],[R[254]]],[[R[23],[R[30]]],[R[30]]]]],[11,"framed",E,R[240],9,[[[R[255]],[R[256]],["sized"]],[["sized"],[R[255]],["framed"],[R[256]]]]]],"p":[[3,R[269]],[4,R[270]],[3,R[271]],[3,"Framed"],[3,R[272]],[3,R[273]],[3,R[274]],[3,R[285]],[3,R[275]],[8,"Decoder"],[8,"Encoder"],[3,R[276]],[3,R[277]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);